{
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"exec": [
					""
				],
				"type": "text/javascript"
			}
		},
		{
			"listen": "test",
			"script": {
				"exec": [
					""
				],
				"type": "text/javascript"
			}
		}
	],
	"info": {
		"_exporter_id": "26415849",
		"_postman_id": "a84accf8-ebee-4b1c-805c-2d74edd8594e",
		"description": "Each Request can have different outcomes(see examples), depending on the variable values passed.",
		"name": "selfservice_changePassword",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"description": "After successfull-login proceed to selfservice_changePassword journey collection.",
			"item": [
				{
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();\r",
									"pm.collectionVariables.set('authId', response.authId);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// clear cookies\r",
									"const jar = pm.cookies.jar();\r",
									"const url = pm.variables.get('url');\r",
									"jar.clear(url, function (err) {\r",
									"    if(err) {\r",
									"        console.error(err);\r",
									"    }\r",
									"    else {\r",
									"        console.log(\"cookies cleared!\");\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"name": "getAuthId",
					"request": {
						"description": "Request login Journey to get AuthId",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "accept-api-version",
								"value": "protocol=1.0,resource=2.1"
							},
							{
								"key": "content-type",
								"value": "application/json"
							}
						],
						"method": "POST",
						"url": {
							"host": [
								"{{url}}"
							],
							"path": [
								"am",
								"json",
								"realms",
								"root",
								"realms",
								"customer",
								"authenticate"
							],
							"query": [
								{
									"key": "authIndexType",
									"value": "service"
								},
								{
									"key": "authIndexValue",
									"value": "login"
								}
							],
							"raw": "{{url}}/am/json/realms/root/realms/customer/authenticate?authIndexType=service&authIndexValue=login"
						}
					},
					"response": [
						{
							"_postman_previewlanguage": "json",
							"body": "{\n    \"authId\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdXRoSW5kZXhWYWx1ZSI6ImxvZ2luIiwib3RrIjoiOXRwbnJ1YXY4NHU4NmcxdmQ5amo4aDdjN2IiLCJhdXRoSW5kZXhUeXBlIjoic2VydmljZSIsInJlYWxtIjoiL2N1c3RvbWVyIiwic2Vzc2lvbklkIjoiKkFBSlRTUUFDTURJQUJIUjVjR1VBQ0VwWFZGOUJWVlJJQUFKVE1RQUNNREUuKmV5SjBlWEFpT2lKS1YxUWlMQ0pqZEhraU9pSktWMVFpTENKaGJHY2lPaUpJVXpJMU5pSjkuWlhsS01HVllRV2xQYVVwTFZqRlJhVXhEU214aWJVMXBUMmxLUWsxVVNUUlJNRXBFVEZWb1ZFMXFWVEpKYVhkcFdWZDRia2xxYjJsYVIyeDVTVzR3TGk1M1RHbFVMV3AwU1VOUU1FaHpRemxrVkVoQ016bDNMbEZ4UjJGVlMydEVTbXBKYjBsd2JUQXpkbFpIYVRsaVRWcEpVM2h4WlhkMldFaE1ORTV5TkU5RU1YazJSMUZCWXkxUFoyVk5USFZWVmpSVVJteFROSEJOUzFNNFgzVlRha1JSUzBjelpIaGlRMjltUm5OTlprczFWRVI2VGtSM1NWcG1SamhJVUdkMWRHSjFaRzlSZEhNemNFeERaMng1U0dsaVNEZHBkbGhCY0ZScloweE9RVlZHYzFCVU1teFNiSEpqU25GSFgzbHNRbmN0WW1kQ1NucEpZMEp5T1dONWNtcEdibFZ6VldReU9IZGxaV2QwWDFRMk1GTkNkVWRKYWxjMmNFWmZaekYzY0RaRlJVWm5kRkZUWVdodmQwSmxiUzF3TXpKNlEwZzRWMnRDYkZKdU5WTjRWV3d4TTNVMmFWSkJjRGg1VmxNeGEwTlNhRWxzWVdKUE1VRlJhbUpCZUZJd01tSnllamM1VjFSNmVGWkpjVzQzWTJkamNsaE1NSFJ6YUdkcFdFbG1WM3B3VGpRd01WbGZRbTFzWVRSUGRtaDJTbHBYVnpVNWRURjFVR3cwY1RCWlgzTjRObk51TmpneE1UQlBVMGxNZVRadE1XTmFhR2RGWWs1emVYaHBOVlpPVkd0RWRrUlZOMmRrTFVKek5EWjFhV1JNVFU0MVEzVnFlVkV5VVdsUFFsOXVkMk5aTUhGd1VYYzRVVFJXTUhWV1pFZExTbTlPWlU5WFZHUkpRazFFUTFKTVJqTTRjRGROWm1SR1RYQTJWa3BIYTNwalUzbDFOMHBJUkVWRFYxVlZWSFkwTFVWYVZtRTFjbWx0VkdoM1VreEZSamRaVG1WT05XVkpaRUoyTXpsRVNDMDFkVE13T0VaRk56VTBkamRYUkVOamNXaFpSakZ3V0dGV1ltMUpTMUYwU25abmJUZFRhV1JRT0ZFMU5Hd3hTaTF3VEhCMWFrRjFhM2hIVFRCV1pVZHJWRGhTZFU5QlYxYzNNMUJXU21VNVlteDJRWHBpYkVNdGRqQkRSMWROTTBSQmEyVkdXRlZ1TTAxQ2RWQlJNbFpZV1cxNVRpMURjVWR0Wm5ReWJuZExhalV0WTNOM2NqTjZVMW94UTNOTGNYb3lXR2t0VFZSbmRYZ3RibkZaT0hSc1JVRkhSVzlvU0ZFMFNtdEtPV1JOV1RkNGVtaEVlVGxzZUdkR1FWcEpMbTVtU21KdGF6aE5PR2g2TlVkMGFYaHRNVnBoU2tFLmtYaDJPaGctTEwwN2VSSDh0VkJFQ2VTMUlFbUJUOE5WOURvQWZvZTlucWMiLCJleHAiOjE3MTAzMzY5NzMsImlhdCI6MTcxMDMzNTE3M30.61QBRVNSZ-bhGJswwuSnuKxnSkNed-a05nZbyTe_oYs\",\n    \"callbacks\": [\n        {\n            \"type\": \"NameCallback\",\n            \"output\": [\n                {\n                    \"name\": \"prompt\",\n                    \"value\": \"User Name\"\n                }\n            ],\n            \"input\": [\n                {\n                    \"name\": \"IDToken1\",\n                    \"value\": \"\"\n                }\n            ],\n            \"_id\": 0\n        },\n        {\n            \"type\": \"PasswordCallback\",\n            \"output\": [\n                {\n                    \"name\": \"prompt\",\n                    \"value\": \"Password\"\n                }\n            ],\n            \"input\": [\n                {\n                    \"name\": \"IDToken2\",\n                    \"value\": \"\"\n                }\n            ],\n            \"_id\": 1\n        }\n    ]\n}",
							"code": 200,
							"cookie": [],
							"header": [
								{
									"key": "Date",
									"value": "Wed, 13 Mar 2024 13:06:13 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "2166"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "content-security-policy",
									"value": "frame-ancestors 'none'; font-src 'self' data:; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline'; default-src 'self';"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=63072000; includeSubDomains; preload"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "cache-control",
									"value": "private"
								},
								{
									"key": "set-cookie",
									"value": "iPlanetDirectoryPro=\"\"; Expires=Thu, 01 Jan 1970 00:00:00 GMT; Path=/; Secure; HttpOnly; SameSite=none"
								},
								{
									"key": "set-cookie",
									"value": "amlbcookie=01; Path=/; Secure; HttpOnly; SameSite=none"
								},
								{
									"key": "content-api-version",
									"value": "resource=2.1"
								},
								{
									"key": "expires",
									"value": "0"
								},
								{
									"key": "pragma",
									"value": "no-cache"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "36"
								},
								{
									"key": "server",
									"value": "istio-envoy"
								},
								{
									"key": "Set-Cookie",
									"value": "AWSALBAPP-0=AAAAAAAAAAC9rOufD92flx25c1gKVl6RKL8/T0wXGic0rliBy+oDNj156MA0KWgrBhgqiJe6j6m5b09PpOwR+6M3RXeZVjfLjV0lh5K5BZbv6dRT2BOVhWh+bAEcx+e++W5jZIjNa5aSqr5YZGJIQMUA6GfdrqNEp14LBWPPxQRnR2GUXoYZegYZdjJOIS+poLMEv0aKEgixmchR2P2hNKu17DSiD+PK2+ATb322RLTn808LtFG8wDNAzou7sVgpqFUNzvge2nhZILocj2Zw7I805OkGlFXX; Expires=Wed, 20 Mar 2024 13:06:13 GMT; Path=/"
								},
								{
									"key": "Set-Cookie",
									"value": "AWSALBAPP-1=_remove_; Expires=Wed, 20 Mar 2024 13:06:13 GMT; Path=/"
								},
								{
									"key": "Set-Cookie",
									"value": "AWSALBAPP-2=_remove_; Expires=Wed, 20 Mar 2024 13:06:13 GMT; Path=/"
								},
								{
									"key": "Set-Cookie",
									"value": "AWSALBAPP-3=_remove_; Expires=Wed, 20 Mar 2024 13:06:13 GMT; Path=/"
								}
							],
							"name": "successfully / 200",
							"originalRequest": {
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "accept-api-version",
										"value": "protocol=1.0,resource=2.1"
									},
									{
										"key": "content-type",
										"value": "application/json"
									}
								],
								"method": "POST",
								"url": {
									"host": [
										"{{url}}"
									],
									"path": [
										"json",
										"realms",
										"root",
										"realms",
										"customer",
										"authenticate"
									],
									"query": [
										{
											"key": "authIndexType",
											"value": "service"
										},
										{
											"key": "authIndexValue",
											"value": "login"
										}
									],
									"raw": "{{url}}/json/realms/root/realms/customer/authenticate?authIndexType=service&authIndexValue=login"
								}
							},
							"status": "OK"
						}
					]
				},
				{
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();\r",
									"pm.collectionVariables.set('authId', response.authId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"name": "passUserData",
					"request": {
						"body": {
							"mode": "raw",
							"options": {
								"raw": {
									"language": "json"
								}
							},
							"raw": "{\n \"authId\": \"{{authId}}\",\n \"callbacks\": [\n  {\n   \"type\": \"NameCallback\",\n   \"output\": [\n    {\n     \"name\": \"prompt\",\n     \"value\": \"User Name\"\n    }\n   ],\n   \"input\": [\n    {\n     \"name\": \"IDToken1\",\n     \"value\": \"{{userName}}\"\n    }\n   ],\n   \"_id\": 0\n  },\n  {\n   \"type\": \"PasswordCallback\",\n   \"output\": [\n    {\n     \"name\": \"prompt\",\n     \"value\": \"Password\"\n    }\n   ],\n   \"input\": [\n    {\n     \"name\": \"IDToken2\",\n     \"value\": \"{{password}}\"\n    }\n   ],\n   \"_id\": 1\n  }\n ],\n \"status\": 200,\n \"ok\": true\n}"
						},
						"description": "Pass the user credentials required for login : userName, password.",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "accept-api-version",
								"value": "protocol=1.0,resource=2.1"
							}
						],
						"method": "POST",
						"url": {
							"host": [
								"{{url}}"
							],
							"path": [
								"am",
								"json",
								"realms",
								"root",
								"realms",
								"customer",
								"authenticate"
							],
							"query": [
								{
									"key": "authIndexType",
									"value": "service"
								},
								{
									"key": "authIndexValue",
									"value": "login"
								}
							],
							"raw": "{{url}}/am/json/realms/root/realms/customer/authenticate?authIndexType=service&authIndexValue=login"
						}
					},
					"response": [
						{
							"_postman_previewlanguage": "json",
							"body": "{\n    \"authId\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdXRoSW5kZXhWYWx1ZSI6ImxvZ2luIiwib3RrIjoiZjRkcjk2cjFnZ2xlcjJwaXVvNDNtcDhnb2EiLCJhdXRoSW5kZXhUeXBlIjoic2VydmljZSIsInJlYWxtIjoiL2N1c3RvbWVyIiwic2Vzc2lvbklkIjoiKkFBSlRTUUFDTURJQUJIUjVjR1VBQ0VwWFZGOUJWVlJJQUFKVE1RQUNNREUuKmV5SjBlWEFpT2lKS1YxUWlMQ0pqZEhraU9pSktWMVFpTENKaGJHY2lPaUpJVXpJMU5pSjkuWlhsS01HVllRV2xQYVVwTFZqRlJhVXhEU214aWJVMXBUMmxLUWsxVVNUUlJNRXBFVEZWb1ZFMXFWVEpKYVhkcFdWZDRia2xxYjJsYVIyeDVTVzR3TGk0MGJURXlSbU5yZDJsVlZFb3hOa1JvTUVSMlIyMW5Mbk52UlRCWlVqbGtVVFYyYmtSWGFVNVhWSGMxUlZnd01saFRVMkl3ZG1GTFNWWnlRbXgwYkU1SlQyWnBWbEpoTURkclF6ZE5WMjlHVG1oYWJWWTFlV2hIYUMxRU5qRlJNVlZrTFZoSU5uVjNNMFZWTWxaR04ydHZWRUZwY1RacVFUUXhkblp6ZVZKUk9GRmlTa0YyWDFFMVpIcENhRzVPYVhrMVdIWlJYMVpaWlhSaVUydEZXa3hsWlhKTVRrSlJiMUpsY2xkNldIcG5TVW95WlZabVpqTnVTM0JhVXpNemVUZFhTRWRYYm1rMGEyTlVXSEZIV0VkalRYRnJhVWRCWld0UlFsODVlWHBMWHpsTWRsTlNjSEZLY0ZCSVJYSk9ZWE0xUVVRMFlTMXJObVV3Ym1GdE5YaDRXbU5MU3pWSWEwZGlVRzl5VW1adVQyZElNbkpFYVVrMmJqWm5abGcxTFdwUWRIQjZPRmRZZG5kaWVUTTBjMk5vY1Zab1ZHUXdSMWsxTnpSM05YbENZblpQTkZCRWNIRjNSR1JTVVhsWFMyNURaa05pY2poUGFqUXlOVEJmT1hkVFlWVnRabFpOY0dWdVdGZHhTRkJCWm1keGEwOU5PRTFhWWtkdlVVdENSR2d3VjE5SlF6WnpkRVpqTldKR2IyZE9ZM0UzZVZWaVUwWnRVVFoyTFhKelMzTXpPR2xsWDNsVVVIUm9lazFrWmtJdFkzRkJMVEJXUkdnMllYZDBYMlZ5YkZBNU9FRlpTVFp0Vm5oeFZ6RklZbU51T0hkM1R6VjZWMk5IV1RKeWMwZGhObmhOYm10NE1qQnZOelZPTjB3dGRWVlVRVzFRVjBwalQxVmxkRlJxVVdKNE1FOWZha1V6VUc1clEwaG9jMll3UTI1U1RFRlNTbXh2Ym05V1VGZ3lhSG93V2tORWVVcEpXa2R3Y1VRemVEazNUV1p0Y0RWSmNGRXdVbVp1T1Zwa1pXRnROa3RGWnpVeE5FSkNiMTlCWWtOTGEwbG9SV3BXVUVsbFMzTm5ZV1JaVm1rMlFsWjRaMHBoWDBoQlFsVTJWVlY0ZW5GRVdFTldNbHBHTkdnemNrRk1OVVZNUVhKSlVUQTRaMlJLZEZWWU1FbEtVV3hEZGxwYU5sWnRZbEpLY0V4dlJtSTFObXQ2U1ZGalluRnZkVzlrWVdoUFVYVmFVSGRyZEc5dVIweG5aMWhtTFdwR1dtVlRSblZuVW1JelpETjRaM2xJWlhoRldsVlBhMUJxYlZWd1NFMXFVVXh2TWtwU1FrNU1ObTB3TWpKMFpFNHdMVTlaU2xWcmEzTnFiMjkyTFVoV1VVbGxhbEZETFdsNk9VUlhUa1J6VVhwM05FdHFTVmMxZDBkTlVHcHpUa1J5VWpoU1gzUk5YMUl5V1dka1IxaHVVMkpUVUZaa2RHdFpTMWt5ZVRadFFqSjFiemxoWlZwWlZETnpWa1Z2ZEc0NE1WVjNNMlZHYm0xTU0zRnhNRUZWZGtSQmVHaEZOWFZvUm5ac1VucDNhVFJxVVhsdFlrZHFNMFZuV0dWcE5ETjJWM1ZZVG5rd1QwWkNYMUJsWVdWTVkydHhlRjlKU0RBeGNYVm9iSFpYVEZCT1dtRnJVV2cwTm14elpqQlRkR1YyVTNGVVdVRklVbmRwU1RKSVQybFBlRlZJWW5kMk5VRlFibGx0ZUd0ek4ybE1kMkoxYkc5dFVIb3plR0pmY1dKa2QwSTNTREZNYjBWa1NpMTRhRFYxZVZGME5EQkpZblYzYnpCd2RscENUV0l6T1c0eE4zaElkREl5VDNjMlUyd3pZbEZTVFdwbVIzbG5ibnB2UW1GS1dXRTFVRXN3TldGelgzWlRlRk52T0cxM2MycG5kalowYVhKdVRqZ3dRa3A2Wm1ZNGMwODRkVTl3TnpaYWFqQm1TbFJwYWpsTWJuZGhXSE5RY0Y5RFIzQm9NbkpOVG5JeFREUlNZbU4xUXpOSVpWbDNSV3A2VGxFeU5UQjVka3g2VkdKc2FsOXpjV0ZOVlhkRFNqWXdjMkZ6UWpkNk1FdFhibFEwV2xNeFkzTlpWeTFUY1VOUmIxOHhiVWRoWkdOc1Uyd3ROVFp1TVROWlRWUlBlRVJYUkc5Nk9WTm1Xa3RWVkZGZmRVTnRXRnBJWlZGR2JXSlNURFpzVkhVNGFFdFNTa3haYTB0NlJXaFNVRlU0VGpKRk5sbDNTM2d5V21WMVVHVlpRVmt5YW5sRlkzTlVjMlJMVlRsTU5USlRZVGRCWjNKek5UVmhjM2x2Tms1Tk1HTlFlbE51ZWt4T1FUQm5aRk5TUjAxMmVVTlhaM0o2YjFoUk9GbDVXR3gzTmtKNFoxWnlkSGw0YWxBNGEweE5Nek5rWVRCcVNtVTRVR1Z3TkZZMU1VOHhSbE5KZVVwdGFucFpRamRJY2s1T1MwZzJXa2syT1U5dWFtaFVNRlo2V2xGeVdYcFhhbWQ0ZUVSU2F5MVBTV1pVZERkVFlqRmZVUzFwY2taR1JYa3lTVmRFUkRkcWRtaHJhMDl2ZG5KaGEwRmFPRzlvVGpsalkxa3lZV2R6ZDJ4MU5pMUpZVmxGUVdsRGVVNUlORk5vWjFoemExZGxUM0p6WHpkcldHUXdSbXBTVkd4TkxXSTFkREJEWW1zNFNrSlZMVU5TVTJSdlUwMTBPSGcyYUdwWFQzaDZWakoxY0MxMVdYRjFWR2hhVjJsM1dHWkJjMHBaTTBack56QTNTamQ2U2psQmVUWmxTbFpwYTBNelRDMTZhelpsVDJWSkxYSnVPRTR6U0VwNVRraGpOMHhNUTNOS09YZzJUMHRXVkd4RlFrd3hhMGQyVUZOSk5sQXpjM0l3UTJSV05uVjRhbmxpTFhGeU5FaHFNVWR1WXpsRFpHeFNWWHBrY2pJdE5URnViR0Z5YkZwYVFtcFhWME5uUjJzeWFYUlBSemcxY21KdlRUQjBURzlhWlMxd2NpMVFPRkpQVERoUVQzZHhjRmMyV1ZoclUyVklSbnBtYzI4NVpVOUlNRWR0UkZKSVdFUmtZaTB4WTJaa2EwcE1kRUl5T1VaVWVsRkllVlZ3U1U1aWNYRmZTWEZvV0RJM1pFMDBNamhPVUc1d05WTmpSVWh6YjJSc1FtZHpTR1ZYYVhOeWRVWjFlRUprYmxSZmJqVklUSFE1YjBVNU1tSnhXV3h6TFZsUldYVlJPRXN3TTBSdUxVcGFSMkppVFU5dWMwbDJhRzVOYUd0d2N6WXlPVTVuVEZSdmRrSlJlbTFXYldjM1pGZ3daMVZ0U1hGdVRVbGZSMmxaYWt4bmNWZEJkWGd3UTNkSlRFMUhTM0JNV21sRlp6WnZWVGx4TFU5SFUySkNlbG96UW0wM1RFazFibkUyYVRVNVFuaENOelkxYlZwQk5ucHNOakJuTkc5V1RFZFdSSGgyTlVaVWFscDVSMlo1Um5Zd2QyVlJWMEV5WlUxd2JVUm5helE0UlhZNU1tZEZOa3B5WVdzemFtaEhiV1J2UzJkeVYwcE9UWFprVm05S1EzWnhUWEJyV0Vrd1FtRnZTMXByV1daVE1sOTVNbkpFYUVoelFtOW5TVU5RZDNoUlpXWnFTbXd4YURsemRDMTNVbk5FVDNoMk5UWnZUbXAyVFZCYWFVTm5OMFJRYjFCWVQwYzBNVlI0VTFwc1NFUnZRM0JxTURoR1MxQXdiRnBwUkZWUlNHOU9Yelk1UjFkaFQxcEdPSE0xYkRkMVZFNDVYek5TVWt0dk5uSlZSazluYkZORVdVNW5jRmRyTmpoT00xRndOMTlKYkdSSFgwVk1WSGhmVTAxd2JXWnNTSEoyTWtKR05rOXpNRTVTYjJkNVdWVjJTMmRJVGpac2NubHpTVXRUU0ZwUE9HZG9RM2RSUTNwbGIwOXNjRzgxTTNWc09YTnhlakI1TlROR01HTlJaMmMyYVVRMVJUTlRiMjUwUWkwelVHUmhOaTB0VVc1Nk1sZG1XRU5xVFRsbUxUYzJXRVJwYUdoZk9ERlNNRU5CV0djMWEwUnRWa2hzVVZwWVJ6RjNOVUpLYjNwRFEwOVpka3BIVWs1WFJXMXRWUzU0ZG5NMmJtbFhOR3RXT1VoUWNWVXhZbkJzT1Vwbi5zMkVsTWtQQVY0LTE2dC1JenRYakF0dmVjZkp3WGEtRmRLcGVOUDVoSDF3IiwiZXhwIjoxNzEwMzI5MTAwLCJpYXQiOjE3MTAzMjczMDB9.eFrBxe19pTh0Clp3eyKg3UoW6hXXxM0KrlSK7Y6xuIg\",\n    \"callbacks\": [\n        {\n            \"type\": \"PasswordCallback\",\n            \"output\": [\n                {\n                    \"name\": \"prompt\",\n                    \"value\": \"One Time Password\"\n                }\n            ],\n            \"input\": [\n                {\n                    \"name\": \"IDToken1\",\n                    \"value\": \"\"\n                }\n            ]\n        }\n    ]\n}",
							"code": 200,
							"cookie": [],
							"header": [
								{
									"key": "Date",
									"value": "Wed, 13 Mar 2024 10:55:07 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "4926"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "content-security-policy",
									"value": "frame-ancestors 'none'; font-src 'self' data:; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline'; default-src 'self';"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=63072000; includeSubDomains; preload"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "cache-control",
									"value": "private"
								},
								{
									"key": "content-api-version",
									"value": "resource=2.1"
								},
								{
									"key": "expires",
									"value": "0"
								},
								{
									"key": "pragma",
									"value": "no-cache"
								},
								{
									"key": "set-cookie",
									"value": "amlbcookie=01; Path=/; Secure; HttpOnly; SameSite=none"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "989"
								},
								{
									"key": "server",
									"value": "istio-envoy"
								},
								{
									"key": "Set-Cookie",
									"value": "AWSALBAPP-0=AAAAAAAAAAAwv7d4dfamhIOdGnfU4N2EvQOT8imbHNLYLBNXxWWMblkq++d4/biZYXPmoC4I1SEo9J2mwEYXTyCWSx9/HqQhuNMjtYl3UEvt5qmXAps58BqpSiSmdSttdzGw8qfP/uiL0gdq05enGbsn3TCxoJditVmzKel15bERFdwd85nsBOVn1GsHIAwWCu/HjCEOFRQf6fWfZeWD62tayZLf/WhB/1mroSitmcRJT50fEeoGscZJlE06N/kruMzwwQ1M+dWQd3tnp+8NDQh7nLYkpOw4; Expires=Wed, 20 Mar 2024 10:55:07 GMT; Path=/"
								},
								{
									"key": "Set-Cookie",
									"value": "AWSALBAPP-1=_remove_; Expires=Wed, 20 Mar 2024 10:55:07 GMT; Path=/"
								},
								{
									"key": "Set-Cookie",
									"value": "AWSALBAPP-2=_remove_; Expires=Wed, 20 Mar 2024 10:55:07 GMT; Path=/"
								},
								{
									"key": "Set-Cookie",
									"value": "AWSALBAPP-3=_remove_; Expires=Wed, 20 Mar 2024 10:55:07 GMT; Path=/"
								}
							],
							"name": "successfully / 200",
							"originalRequest": {
								"body": {
									"mode": "raw",
									"options": {
										"raw": {
											"language": "json"
										}
									},
									"raw": "{\n \"authId\": \"\",\n \"callbacks\": [\n  {\n   \"type\": \"NameCallback\",\n   \"output\": [\n    {\n     \"name\": \"prompt\",\n     \"value\": \"User Name\"\n    }\n   ],\n   \"input\": [\n    {\n     \"name\": \"IDToken1\",\n     \"value\": \"benten\"\n    }\n   ],\n   \"_id\": 0\n  },\n  {\n   \"type\": \"PasswordCallback\",\n   \"output\": [\n    {\n     \"name\": \"prompt\",\n     \"value\": \"Password\"\n    }\n   ],\n   \"input\": [\n    {\n     \"name\": \"IDToken2\",\n     \"value\": \"ICConsult@12345\"\n    }\n   ],\n   \"_id\": 1\n  }\n ],\n \"status\": 200,\n \"ok\": true\n}"
								},
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "accept-api-version",
										"value": "protocol=1.0,resource=2.1"
									}
								],
								"method": "POST",
								"url": {
									"host": [
										"{{url}}"
									],
									"path": [
										"am",
										"json",
										"realms",
										"root",
										"realms",
										"customer",
										"authenticate"
									],
									"query": [
										{
											"key": "authIndexType",
											"value": "service"
										},
										{
											"key": "authIndexValue",
											"value": "login"
										}
									],
									"raw": "{{url}}/am/json/realms/root/realms/customer/authenticate?authIndexType=service&authIndexValue=login"
								}
							},
							"status": "OK"
						},
						{
							"_postman_previewlanguage": "json",
							"body": "{\n    \"authId\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdXRoSW5kZXhWYWx1ZSI6ImxvZ2luIiwib3RrIjoicjhxcmYyNTA5ZWhkdWM4aXY1Y2duam8wbDAiLCJhdXRoSW5kZXhUeXBlIjoic2VydmljZSIsInJlYWxtIjoiL2N1c3RvbWVyIiwic2Vzc2lvbklkIjoiKkFBSlRTUUFDTURJQUJIUjVjR1VBQ0VwWFZGOUJWVlJJQUFKVE1RQUNNREUuKmV5SjBlWEFpT2lKS1YxUWlMQ0pqZEhraU9pSktWMVFpTENKaGJHY2lPaUpJVXpJMU5pSjkuWlhsS01HVllRV2xQYVVwTFZqRlJhVXhEU214aWJVMXBUMmxLUWsxVVNUUlJNRXBFVEZWb1ZFMXFWVEpKYVhkcFdWZDRia2xxYjJsYVIyeDVTVzR3TGk0eWRrdEpPV3Q2U21WWmRFSm1WV2w2ZERNM2IxOUJMazV2TkVwUFZsUlRNVzAxZUROWVNIWkhlRVZGVDB0c1ZrNVFVQzFMUlhaRllVcDBlREZNZEV4Q1pEaDZUVFYzYTBGS01XTmtSR0p4VlRSZk0xYzRWbFE1TkV4TVZrcFlOMDlHYWtVeWRtd3pNWGRLTUV0UU9FcHNOM05OT1ZwWVptd3pWVzFpYmpNNVFsRk9TbXRrZVcxNmFpMW5Sa3A1VUZJdFYwMVhNMng0VUdOYU0zWjJjVkpSTjFweGQwUjNOWGhWVEZCaFVVNVhUVEo2VDB0cVNuRlNVVEo2Tm5STmMwWXRSR054V1RKNVFYbHhWVkZ2U1RGVmVqSjFVRWRIZVhKWk0xWkpiR3RqZFdSQlNtUmlMVUYxWVVOUk1YTkdkMWhzYWxsYU4yNXRaSGsyYjBsR1JWbEhObGRtVUdRM2Rsb3llREEwZHpST01VaDJUamxrZFcweVdGaFRNSFkxVnpkWWRITTRWMWhvVlZVM1pVSlVTbUptT1hWNVRqbFRZa1JtVWs5c1pWazFVM1IyTFhWaVdUQlNabEJSTnpkVlpUWm9NVVl5VjJ4M2VVVTJhVTl2Y2s4MFVITlNZamRQVVhNd05reEplR1ZIVVZaUlZESXRURXhhZUhrMmJsZFVUMlZ3V2pGTFNHVkJSblpOVFVvMmVGRllRbkZXT1RKaWFHMWFWVzB5Y205UFUxaE1kVEo2WDJWUWIyWlRka05WVFdsNGFVaE5VR1pGTW1KcE5uTlplbVZ5YkZsM1QwcFlNVmR0T1c5R2VXRk9hMnhsTldweFZVdGZkRTlYYWtGM2NUQnVXbkpvVWxsTWNIVjVObTk0YlY5VmRGVnBhemN4Ym5rd05IWnVUemh2TWpWV1pGUm1SV1ZGVkhOblMxOWpjM1o2TlhSUE1rOUxWM3BqZG1STldYaERTRWhxUlUxUlJVczVURzVhWDFVek1VdEZhbU5XTVVsbFFWWk1WRnBmZGpreVNrTmlVVXQzYmtwSk5qRnBTMnAyTW1SaVFVbzJjRXAxZW5Od1lVWnhSRU5OY2xGcE4xVnpTR0pCWmtST1pFWlRlVkY1Y3pKM1dURXRiMFJ4WjAwMVp6ZDBVMUpUWHpGUlkzbFRTMHN3VUhoaVVFa3lWeTE0WW0xdGFITkNOelUxVVRKbFh5MWlZMGhsUmxkWFFWcDVjRVl0UjNGRk1FVlhaV1ZRVm5Od1Uza3daSGRpZUMxSGVXSXpNRk5zT1ZFeVVrTkRPR1Z3WldwSFNVMDNYelF0WWtsU2RXODVkVlUxZW5waVdHaHFRMTlPVVVKQ1JXZ3lXaTFMTUZBNGNtZ3pOalE1ZEdkZlZFeG5TMUo2V25oV2JWZENSbEYxYW1SemRIcDJlazFJUzFOaFNuVm1ObnBqWmtORU1YQnJkRlJHVkZOcFRHVkNXbGxpVkdOQ04wNHRlR3c0TkVGcE0zbEJOSEUxUmxJMmVVOU9abkZaTW5jdFJHZG9RalZKVkdoR01VTm1jRVp6Wm1vMGNuSXhjVVpKY2tkd2FVSlFPWFozTlhSRk1sOWlOVGRFUzNwTmJucEpWSGt3YmxOVmNpMDVValJQZGxOeFVsZzNhbTlpVWpGbk5uVXhXVGh2VVZFdGIwOWpXa05KVUVOSVZEZEJibWhTYkVwb00zSTNZMWt3VG1sT1VYbERSVkp0YVRaVlF5MDFZVzVpWjNKSFdrUk5UbGxHVm1nMWNuZGZjV3RtY0d3d05URlFPR1IyYzNCck1WVlRSekpXYkZwQ09ITmpOVWN6VlhwcWNVdG5NVFZ2TFRsT1ZqRjBUemh0Y1dGRFlqWTJiWEl6YVZZek1YVlBWRTVtU0U1bGIxZENPWFl6Y2pOV1NsaHRSa2xMTldSeWFWVkdhbWxQWDB4cVFUUklTME5ZTm1VdFNUQlpiSEo0UTBORWFXZFNOVGxETlhKR2EyZHlSVTlSVGxORFNVRnpNSGhpTTBvd0xXMU1XbGhPZWxaSVVTMVZiRGN3VTJkSlVHZFhlbmhIWW5sT00yOUpZa1pSYTJneVJtMHlRM28zWXpGMU9FdFhWVFp1TTJzelVFUnpPWEJ5Um5CQmQxZzBUM010YjBsemVqUkdRa0pUWTJkSVMzZE1VRkpzUlVreFlVNWZjRmRrYlRSa1FtRm5WV291WkY4MlZqQkhWbXRsVEhCSlZUbFdaRzg0WTFWclFRLjJuaEd4aUlyLUZ2a2RHZlJwN3JPRnQ5bER3S2pDSFVHWm45bC1TOEJJUDgiLCJleHAiOjE3MTAzMjgyMTEsImlhdCI6MTcxMDMyNjQxMX0.ne2p1thAHhJIezK9cD-DX8cctGsWZOlyYc-U_iw3elk\",\n    \"callbacks\": [\n        {\n            \"type\": \"TextOutputCallback\",\n            \"output\": [\n                {\n                    \"name\": \"message\",\n                    \"value\": \"incorrectUsernamePwd\"\n                },\n                {\n                    \"name\": \"messageType\",\n                    \"value\": \"2\"\n                }\n            ],\n            \"_id\": 2\n        },\n        {\n            \"type\": \"NameCallback\",\n            \"output\": [\n                {\n                    \"name\": \"prompt\",\n                    \"value\": \"User Name\"\n                }\n            ],\n            \"input\": [\n                {\n                    \"name\": \"IDToken2\",\n                    \"value\": \"\"\n                }\n            ],\n            \"_id\": 3\n        },\n        {\n            \"type\": \"PasswordCallback\",\n            \"output\": [\n                {\n                    \"name\": \"prompt\",\n                    \"value\": \"Password\"\n                }\n            ],\n            \"input\": [\n                {\n                    \"name\": \"IDToken3\",\n                    \"value\": \"\"\n                }\n            ],\n            \"_id\": 4\n        }\n    ]\n}",
							"code": 200,
							"cookie": [],
							"header": [
								{
									"key": "Date",
									"value": "Wed, 13 Mar 2024 10:43:16 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "3248"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "content-security-policy",
									"value": "frame-ancestors 'none'; font-src 'self' data:; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline'; default-src 'self';"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=63072000; includeSubDomains; preload"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "cache-control",
									"value": "private"
								},
								{
									"key": "content-api-version",
									"value": "resource=2.1"
								},
								{
									"key": "expires",
									"value": "0"
								},
								{
									"key": "pragma",
									"value": "no-cache"
								},
								{
									"key": "set-cookie",
									"value": "amlbcookie=01; Path=/; Secure; HttpOnly; SameSite=none"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "1198"
								},
								{
									"key": "server",
									"value": "istio-envoy"
								},
								{
									"key": "Set-Cookie",
									"value": "AWSALBAPP-0=AAAAAAAAAADYMCv1kT76M4gpvezUBSPaxdpzagDHtRNyI/DdQb59xQUH9EbcOGiW3LVtHeTdfE5I+NhcpdqYukT/MIC8SvtKd2kt6SygwgZwpYIvfyLnCUckDWeuKDTKsAsdAzEtLylSDthVyRP0W4tZ/jOVl1RCvOmb2dAhgCQ2n7qlbKqtD8OwDWa0LsqmFcfAgKoWvoOyo/5+4+Z6Vno4pDFSv0E5ope7PLOYbKXuoKBgC2tt9JzbEtbFjNy/EA9QEq8sB+pAb0S6XWK6RCsO3wP8RPEY; Expires=Wed, 20 Mar 2024 10:43:16 GMT; Path=/"
								},
								{
									"key": "Set-Cookie",
									"value": "AWSALBAPP-1=_remove_; Expires=Wed, 20 Mar 2024 10:43:16 GMT; Path=/"
								},
								{
									"key": "Set-Cookie",
									"value": "AWSALBAPP-2=_remove_; Expires=Wed, 20 Mar 2024 10:43:16 GMT; Path=/"
								},
								{
									"key": "Set-Cookie",
									"value": "AWSALBAPP-3=_remove_; Expires=Wed, 20 Mar 2024 10:43:16 GMT; Path=/"
								}
							],
							"name": "incorrectUsernamePwd",
							"originalRequest": {
								"body": {
									"mode": "raw",
									"options": {
										"raw": {
											"language": "json"
										}
									},
									"raw": "{\n \"authId\": \"{{authId}}\",\n \"callbacks\": [\n  {\n   \"type\": \"NameCallback\",\n   \"output\": [\n    {\n     \"name\": \"prompt\",\n     \"value\": \"User Name\"\n    }\n   ],\n   \"input\": [\n    {\n     \"name\": \"IDToken1\",\n     \"value\": \"{{userName}}\"\n    }\n   ],\n   \"_id\": 0\n  },\n  {\n   \"type\": \"PasswordCallback\",\n   \"output\": [\n    {\n     \"name\": \"prompt\",\n     \"value\": \"Password\"\n    }\n   ],\n   \"input\": [\n    {\n     \"name\": \"IDToken2\",\n     \"value\": \"{{password}}\"\n    }\n   ],\n   \"_id\": 1\n  }\n ],\n \"status\": 200,\n \"ok\": true\n}"
								},
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "accept-api-version",
										"value": "protocol=1.0,resource=2.1"
									}
								],
								"method": "POST",
								"url": {
									"host": [
										"{{url}}"
									],
									"path": [
										"am",
										"json",
										"realms",
										"root",
										"realms",
										"customer",
										"authenticate"
									],
									"query": [
										{
											"key": "authIndexType",
											"value": "service"
										},
										{
											"key": "authIndexValue",
											"value": "login"
										}
									],
									"raw": "{{url}}/am/json/realms/root/realms/customer/authenticate?authIndexType=service&authIndexValue=login"
								}
							},
							"status": "OK"
						}
					]
				},
				{
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();\r",
									"pm.collectionVariables.set('tokenId', response.tokenId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"name": "passOtp(sms)",
					"request": {
						"body": {
							"mode": "raw",
							"options": {
								"raw": {
									"language": "json"
								}
							},
							"raw": "{\n \"authId\": \"{{authId}}\",\n \"callbacks\": [\n  {\n   \"type\": \"PasswordCallback\",\n   \"output\": [\n    {\n     \"name\": \"prompt\",\n     \"value\": \"One Time Password\"\n    }\n   ],\n   \"input\": [\n    {\n     \"name\": \"IDToken1\",\n     \"value\": \"{{otp}}\"\n    }\n   ]\n  }\n ],\n \"status\": 200,\n \"ok\": true\n}"
						},
						"description": "Use the default 2fa method **sms** To get **tokenId**, make sure the user has accepted \"**terms & privacy condition\"** for a successfull response.",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "accept-api-version",
								"value": "protocol=1.0,resource=2.1"
							}
						],
						"method": "POST",
						"url": {
							"host": [
								"{{url}}"
							],
							"path": [
								"am",
								"json",
								"realms",
								"root",
								"realms",
								"customer",
								"authenticate"
							],
							"query": [
								{
									"key": "authIndexType",
									"value": "service"
								},
								{
									"key": "authIndexValue",
									"value": "login"
								}
							],
							"raw": "{{url}}/am/json/realms/root/realms/customer/authenticate?authIndexType=service&authIndexValue=login"
						}
					},
					"response": [
						{
							"_postman_previewlanguage": "json",
							"body": "{\n    \"tokenId\": \"cAgh2R_fB7FXo_pHVf7zcHzv7X0.*AAJTSQACMDIAAlNLABx3UE5ONWFPcHRoTHEyNGp6bEhpMzh2cFM2cVU9AAR0eXBlAANDVFMAAlMxAAIwMQ..*\",\n    \"successUrl\": \"/am/console\",\n    \"realm\": \"/customer\"\n}",
							"code": 200,
							"cookie": [],
							"header": [
								{
									"key": "Date",
									"value": "Wed, 13 Mar 2024 10:48:30 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "175"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "content-security-policy",
									"value": "frame-ancestors 'none'; font-src 'self' data:; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline'; default-src 'self';"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=63072000; includeSubDomains; preload"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "cache-control",
									"value": "private"
								},
								{
									"key": "set-cookie",
									"value": "iPlanetDirectoryPro=cAgh2R_fB7FXo_pHVf7zcHzv7X0.*AAJTSQACMDIAAlNLABx3UE5ONWFPcHRoTHEyNGp6bEhpMzh2cFM2cVU9AAR0eXBlAANDVFMAAlMxAAIwMQ..*; Path=/; Secure; HttpOnly; SameSite=none"
								},
								{
									"key": "set-cookie",
									"value": "amlbcookie=01; Path=/; Secure; HttpOnly; SameSite=none"
								},
								{
									"key": "content-api-version",
									"value": "resource=2.1"
								},
								{
									"key": "expires",
									"value": "0"
								},
								{
									"key": "pragma",
									"value": "no-cache"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "372"
								},
								{
									"key": "server",
									"value": "istio-envoy"
								},
								{
									"key": "Set-Cookie",
									"value": "AWSALBAPP-0=AAAAAAAAAAA8VD+bM62LqIxldYMBlaqDoY+gWvDXP8FLSLj3qaokWdnfQVJOvkl7/k40xloIczln+DKP0Eh+w18yPfSW0zf4jJWSLTgDLw9mOFSR/E/cQgpBChTz4QVQnnnzOn2fJoVhXLR4Lmi5KUv2OgLvc4UmxTV3BOZhjYXIMw4UzERsYULb7KhW8vWii5bF98dzuQ/7fvwVC7iGXpHUkgi5xiYdZqdoBcQrUobMK7pzRlS157MBbtbJ59Llbk2Fx4Xd5kkUyC5wf38GGzYIamy1LDnj; Expires=Wed, 20 Mar 2024 10:48:30 GMT; Path=/"
								},
								{
									"key": "Set-Cookie",
									"value": "AWSALBAPP-1=_remove_; Expires=Wed, 20 Mar 2024 10:48:30 GMT; Path=/"
								},
								{
									"key": "Set-Cookie",
									"value": "AWSALBAPP-2=_remove_; Expires=Wed, 20 Mar 2024 10:48:30 GMT; Path=/"
								},
								{
									"key": "Set-Cookie",
									"value": "AWSALBAPP-3=_remove_; Expires=Wed, 20 Mar 2024 10:48:30 GMT; Path=/"
								}
							],
							"name": "successfully / 200",
							"originalRequest": {
								"body": {
									"mode": "raw",
									"options": {
										"raw": {
											"language": "json"
										}
									},
									"raw": "{\n \"authId\": \"\",\n \"callbacks\": [\n  {\n   \"type\": \"PasswordCallback\",\n   \"output\": [\n    {\n     \"name\": \"prompt\",\n     \"value\": \"One Time Password\"\n    }\n   ],\n   \"input\": [\n    {\n     \"name\": \"IDToken1\",\n     \"value\": \"011056\"\n    }\n   ]\n  }\n ],\n \"status\": 200,\n \"ok\": true\n}"
								},
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "accept-api-version",
										"value": "protocol=1.0,resource=2.1"
									}
								],
								"method": "POST",
								"url": {
									"host": [
										"{{url}}"
									],
									"path": [
										"am",
										"json",
										"realms",
										"root",
										"realms",
										"customer",
										"authenticate"
									],
									"query": [
										{
											"key": "authIndexType",
											"value": "service"
										},
										{
											"key": "authIndexValue",
											"value": "login"
										}
									],
									"raw": "{{url}}/am/json/realms/root/realms/customer/authenticate?authIndexType=service&authIndexValue=login"
								}
							},
							"status": "OK"
						},
						{
							"_postman_previewlanguage": "json",
							"body": "{\n    \"code\": 401,\n    \"reason\": \"Unauthorized\",\n    \"message\": \"2FA method Not Found in User profile\"\n}",
							"cookie": [],
							"header": [
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"type": "text",
									"value": "application/json"
								}
							],
							"name": "incorrectOtp",
							"originalRequest": {
								"body": {
									"mode": "raw",
									"options": {
										"raw": {
											"language": "json"
										}
									},
									"raw": "{\n \"authId\": \"{{authId}}\",\n \"callbacks\": [\n  {\n   \"type\": \"PasswordCallback\",\n   \"output\": [\n    {\n     \"name\": \"prompt\",\n     \"value\": \"One Time Password\"\n    }\n   ],\n   \"input\": [\n    {\n     \"name\": \"IDToken1\",\n     \"value\": \"{{otp}}\"\n    }\n   ]\n  }\n ],\n \"status\": 200,\n \"ok\": true\n}"
								},
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "accept-api-version",
										"value": "protocol=1.0,resource=2.1"
									}
								],
								"method": "POST",
								"url": {
									"host": [
										"{{url}}"
									],
									"path": [
										"am",
										"json",
										"realms",
										"root",
										"realms",
										"customer",
										"authenticate"
									],
									"query": [
										{
											"key": "authIndexType",
											"value": "service"
										},
										{
											"key": "authIndexValue",
											"value": "login"
										}
									],
									"raw": "{{url}}/am/json/realms/root/realms/customer/authenticate?authIndexType=service&authIndexValue=login"
								}
							}
						}
					]
				}
			],
			"name": "prerequisites"
		},
		{
			"description": "SelfService Journey for ChangePassword",
			"item": [
				{
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();\r",
									"pm.collectionVariables.set('authId', response.authId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"name": "Enter Oldpassword",
					"request": {
						"body": {
							"mode": "raw",
							"raw": "{\r\n     \"tokenId\": \"{{tokenId}}\"\r\n}"
						},
						"description": "Request the **selfservice_changePassword** journey with the tokenId generated in the previous login journey to get AuthId.",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "accept-api-version",
								"value": "protocol=1.0,resource=2.1"
							},
							{
								"key": "accept-encoding",
								"value": "gzip, deflate, br"
							},
							{
								"key": "content-type",
								"value": "application/json"
							}
						],
						"method": "POST",
						"url": {
							"host": [
								"{{url}}"
							],
							"path": [
								"am",
								"json",
								"realms",
								"root",
								"realms",
								"customer",
								"authenticate"
							],
							"query": [
								{
									"key": "authIndexType",
									"value": "service"
								},
								{
									"key": "authIndexValue",
									"value": "selfservice_changePassword"
								}
							],
							"raw": "{{url}}/am/json/realms/root/realms/customer/authenticate?authIndexType=service&authIndexValue=selfservice_changePassword"
						}
					},
					"response": [
						{
							"_postman_previewlanguage": "json",
							"body": "{\n    \"authId\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdXRoSW5kZXhWYWx1ZSI6InNlbGZzZXJ2aWNlX2NoYW5nZVBhc3N3b3JkIiwib3RrIjoiMjJwOHRjZzhoM3ZzZGk3NWw3NzU1dWUzbWMiLCJhdXRoSW5kZXhUeXBlIjoic2VydmljZSIsInJlYWxtIjoiL2N1c3RvbWVyIiwic2Vzc2lvbklkIjoiKkFBSlRTUUFDTURJQUJIUjVjR1VBQ0VwWFZGOUJWVlJJQUFKVE1RQUNNREUuKmV5SjBlWEFpT2lKS1YxUWlMQ0pqZEhraU9pSktWMVFpTENKaGJHY2lPaUpJVXpJMU5pSjkuWlhsS01HVllRV2xQYVVwTFZqRlJhVXhEU214aWJVMXBUMmxLUWsxVVNUUlJNRXBFVEZWb1ZFMXFWVEpKYVhkcFdWZDRia2xxYjJsYVIyeDVTVzR3TGk1aFNuaDJPRzFyU0c4eFRXMVJka1k1UlRKeWREQm5MakZvTW1neGNIWm9XRmw1UTBwZlQyTk1OMGgwYVZwMlFVUTNha2huWTJKcU5EUlZTMDVZTFhreGRqVk5jakZEVWxGbmJuUXdXVTlVV0d4RGVtc3dkM1pNWVVWcU1HOUNhV0Y0UzJSWkxURm9VVkZDUm1aYVFuWTFlbk5NZFU5NGNYVXlWWFp6UjFsNVpsVk5lSEZzY2pkTGNtTlVNRlpMYkZGUlpHaEtVa3h3ZWxGUlVXeHFMV2wwUTFBd1FtNTVWVm90U2sxTlpsUkdTMk55WkZjdFRYVllVMGRRVldaVGJXRm9OWE5wVGtkdVdVNUthMGsyY0hseVIzWTFkbGg1VkVWS1VXbG9lREZWWVVaME5UVjZkbDl5VkUxNlNWbG5RV0ZOYVhKTFRVaFFRa2htWVcxNU5EWnViMmRVUW1SQ2RscG5OblJNZG01b05tSmxRbkYxYTFaNWRtTTFObEZsYkhSTVZHUjRPVGR6ZUdSVmFUSkZkblEyT1hsT1dFWkljbnBPWkhGb2NVNVBUbHByV21jMVUwVjZhRFpMYlVnNFgwbHlOM3BvT0VOSGExSnVYMUpmV0VkNE1YcHpVelpyZUMxYVptRllUWGRTUWxkdmNEWnhkM2hMU2pBNE9WUmxlRzlxZURWTFdsRlhjbmhOU2xJd2RtSmZOVnBLVmsxb1RsOUJjbWx6ZFRsdmJGWnNUSHBxVkRCRGQyaENjMmsxVTI5UGFGYzNkMmd6VkhWdkxWWnFPWFJXVTBOaGRGRXhORzlXVUVsS1pUZG1iVWhLTWpWQ2QweGhaM1ZsZERjeWJtVkJkSEp4TTJOTVZFUTVjMVJzZG5vM2FtVTNibll4VVZKemJWOTVhazgwT0ZkNVZuRlRlV3hYZURWcVNrbHNaazF4YUhZM1dVOUpVVWR3YkUwMFZWaG9VRUY1UXpKeWJ6RnhXVzQxYzFoclMwUnJUbE5xU2tORmQwNVFkbnBaYzJoUVExSXhaVXhNTTFGVFJFUjNSelpFU1c5Uk9XdzJVVUZEVVdKV1JFUklhRlJZYm5aVWFrTmpPREJNYlY5amVuSkVSbE15YUhCbGJUSnVkRjlLZDJWelVEbHpWamhrWkU5blluQkVaMGRQWlRWcGJYVmpjakJXVjFCRGJFWmxVVkYxWjJ0SlQwRllhMmxEWDBkMlYzSllMV3BuTVRWVmMwZGFla2xVT0ZscmFVNUVWMjkxV2xreVUxVmllR0ZaWlZSNVduaFRibDlGVVVSM1VUQnliM2RGTjA0M1VVTnJjbXBUT0c5bmFGYzJZelZmWHpSalZuUXhYM3BVYlMxU1RVWlJWVEJRYkdkTmREVm5hVFI2VUhJMGNHUnNMV3ROVGw4M2NYVm9SR1JsYlVWSk9YVkdYMm8zUm5CRFFYWkRhMGhwY0VGdE1YVnJTRkZpZVdreFdXeElUbTQwY0cxUExWUnJjVEl3TTJsZmRVRkVTelZQUzFkVU5HSXlkakExWDFnM1Z6WkpTa1ZFVkVNdFdqbGtUWFV3UjNrdFNVZERVekJzZUVaNk1rOTZaMWwxZEVVd0xXbENaMjVPWmt4VWEyNVRRMXB5WlhabVVqbHRkQzFoVVVoSFMwcHVOalJxVUMxbGRsZFJaeTR3U1U5M1dERlpUREZEYzFacmEwTk9NRXBPTVhKQi5YTkVYcTgyRS1aM2NjZUVKaVl0VmVPRi13bUw3M0xrSWNmYVEzVW44RkdnIiwiZXhwIjoxNzEwMzE5ODU4LCJpYXQiOjE3MTAzMTgwNTh9.KgxkkO4JJFAcvDe-t1GqcULu7eec96s3AFQjGSoPLSg\",\n    \"callbacks\": [\n        {\n            \"type\": \"PasswordCallback\",\n            \"output\": [\n                {\n                    \"name\": \"prompt\",\n                    \"value\": \"Password\"\n                }\n            ],\n            \"input\": [\n                {\n                    \"name\": \"IDToken1\",\n                    \"value\": \"\"\n                }\n            ],\n            \"_id\": 0\n        }\n    ],\n    \"header\": \"Enter old password\"\n}",
							"code": 200,
							"cookie": [],
							"header": [
								{
									"key": "Date",
									"value": "Wed, 13 Mar 2024 08:20:58 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "2519"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "content-security-policy",
									"value": "frame-ancestors 'none'; font-src 'self' data:; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline'; default-src 'self';"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=63072000; includeSubDomains; preload"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "cache-control",
									"value": "private"
								},
								{
									"key": "content-api-version",
									"value": "resource=2.1"
								},
								{
									"key": "expires",
									"value": "0"
								},
								{
									"key": "pragma",
									"value": "no-cache"
								},
								{
									"key": "set-cookie",
									"value": "amlbcookie=01; Path=/; Secure; HttpOnly; SameSite=none"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "290"
								},
								{
									"key": "server",
									"value": "istio-envoy"
								},
								{
									"key": "Set-Cookie",
									"value": "AWSALBAPP-0=AAAAAAAAAAC+oE2mFNLvU5v0K/usj4xlYyYLjbj0TfF6hiECCwlpROVOwGgNBYdgyEaD/9fdEy3R9XqBcq8dQZ0c2Jj1L4aBPcAM+yOxs8lX7aVVXks4VNEs/AayQq7dSwlQRn/07mPnp+h2tRA0v1MPmWbPFJ6UP1BNz1N+oscHvlyM+LT9/QSxFhgM5G3l4s/EUHaOxupaTt9uFiXhlTqAr3ySsDRnky0qxDYiQ7Yc8rDpBBCs/4KhWxZ01iJ1Yhei5RPMtv8/ZjDkQs8EJMOIEdHCNcH+; Expires=Wed, 20 Mar 2024 08:20:58 GMT; Path=/"
								},
								{
									"key": "Set-Cookie",
									"value": "AWSALBAPP-1=_remove_; Expires=Wed, 20 Mar 2024 08:20:58 GMT; Path=/"
								},
								{
									"key": "Set-Cookie",
									"value": "AWSALBAPP-2=_remove_; Expires=Wed, 20 Mar 2024 08:20:58 GMT; Path=/"
								},
								{
									"key": "Set-Cookie",
									"value": "AWSALBAPP-3=_remove_; Expires=Wed, 20 Mar 2024 08:20:58 GMT; Path=/"
								}
							],
							"name": "successfully / 200",
							"originalRequest": {
								"body": {
									"mode": "raw",
									"raw": "{\r\n     \"tokenId\": \"\"\r\n}"
								},
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "accept-api-version",
										"value": "protocol=1.0,resource=2.1"
									},
									{
										"key": "accept-encoding",
										"value": "gzip, deflate, br"
									},
									{
										"key": "content-type",
										"value": "application/json"
									}
								],
								"method": "POST",
								"url": {
									"host": [
										"{{url}}"
									],
									"path": [
										"am",
										"json",
										"realms",
										"root",
										"realms",
										"customer",
										"authenticate"
									],
									"query": [
										{
											"key": "authIndexType",
											"value": "service"
										},
										{
											"key": "authIndexValue",
											"value": "selfservice_changePassword"
										}
									],
									"raw": "{{url}}/am/json/realms/root/realms/customer/authenticate?authIndexType=service&authIndexValue=selfservice_changePassword"
								}
							},
							"status": "OK"
						}
					]
				},
				{
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();\r",
									"pm.collectionVariables.set('authId', response.authId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"name": "Submit Old Password",
					"request": {
						"body": {
							"mode": "raw",
							"options": {
								"raw": {
									"language": "json"
								}
							},
							"raw": "{\n \"authId\": \"{{authId}}\",\n \"callbacks\": [\n  {\n   \"type\": \"PasswordCallback\",\n   \"output\": [\n    {\n     \"name\": \"prompt\",\n     \"value\": \"Password\"\n    }\n   ],\n   \"input\": [\n    {\n     \"name\": \"IDToken1\",\n     \"value\": \"{{password}}\"\n    }\n   ],\n   \"_id\": 0\n  }\n ],\n \"header\": \"Enter old password\",\n \"status\": 200,\n \"ok\": true\n}"
						},
						"description": "Submit the old Password. Different values for variables will result in different responses (refer to examples).",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "accept-api-version",
								"value": "protocol=1.0,resource=2.1"
							},
							{
								"key": "accept-encoding",
								"value": "gzip, deflate, br"
							},
							{
								"key": "content-type",
								"value": "application/json"
							}
						],
						"method": "POST",
						"url": {
							"host": [
								"{{url}}"
							],
							"path": [
								"am",
								"json",
								"realms",
								"root",
								"realms",
								"customer",
								"authenticate"
							],
							"query": [
								{
									"key": "authIndexType",
									"value": "service"
								},
								{
									"key": "authIndexValue",
									"value": "selfservice_changePassword"
								}
							],
							"raw": "{{url}}/am/json/realms/root/realms/customer/authenticate?authIndexType=service&authIndexValue=selfservice_changePassword"
						}
					},
					"response": [
						{
							"_postman_previewlanguage": "json",
							"body": "{\n    \"authId\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdXRoSW5kZXhWYWx1ZSI6InNlbGZzZXJ2aWNlX2NoYW5nZVBhc3N3b3JkIiwib3RrIjoiMXByZGUyMGgzOHZsaGF2bWRuZ3M1M2JxZG0iLCJhdXRoSW5kZXhUeXBlIjoic2VydmljZSIsInJlYWxtIjoiL2N1c3RvbWVyIiwic2Vzc2lvbklkIjoiKkFBSlRTUUFDTURJQUJIUjVjR1VBQ0VwWFZGOUJWVlJJQUFKVE1RQUNNREUuKmV5SjBlWEFpT2lKS1YxUWlMQ0pqZEhraU9pSktWMVFpTENKaGJHY2lPaUpJVXpJMU5pSjkuWlhsS01HVllRV2xQYVVwTFZqRlJhVXhEU214aWJVMXBUMmxLUWsxVVNUUlJNRXBFVEZWb1ZFMXFWVEpKYVhkcFdWZDRia2xxYjJsYVIyeDVTVzR3TGk1UGNVbDZSbXd0TjB0RmNUSjBTMFJzYXpGaVdUbFJMaTF3V2xoU01VcG1ZMlptYW5aU2NrUm5WVEExYlhOQlpXTk1VV2h2V2sxQ2FYSTFSWGhuVlRrd2QzcFBaVk5hVG1aaFVVNHplblY2TTNSc1IzSnpWVFZqTVhSTlpYRjJTV05wZEhVNVRubGZZemwxZUhad1FUZFhXVnBXYVRoRVYxOU1iVU5PYkc4NGVraFVTV2hSV1d4VWNtVllNRVZJYkZaMVdtOUVjMWxvYW5SNmFVSlFNbFoyTmpGcmVtUlBZMms1TFVWTWExbFdXbE5vYW5oZlVIbHBjM0ZtWjBSVE1HUnhkVUZqT1RaaE1HRnJUbG80Y2xCclJuZHVjSGRWVjNsVE9YQjJMVGwxWldsMWQwUkNUMFJ5WjNCblkyaDVSVlpIT0UxNVZuSkpWMDE0Y25CU1ZGQjVVMjVDTjFob09XVmxWRlo0WW05ZlVYcFhVMkpDYlcxV1h6QXdNV3RVT1c0emIybDVSelpKVFMxM1ZYTTFZMWROVVZjelVHSm9lSFZGZHpobGN6QlpSblkxVEZKdU1tWnVRWEZTWWtoc1ZsZEpSVTlDTWs1SWFUVkhaV3hXVHpCMmRUSnNiVWd6T1RKTE1FTmZSRXMxUjFWbE5UZFNhMUIyT0RrM1JsWjRVemxXY2xkemJVczNSa0kzWDNrdE5HTjRUakpTVjJJME5YQjZkek40VGpRMVZHcHFSelV4TlVZNVdVSXRRMGxzZEZKaFVFdE1TR2d0VTJ4amVEQkpRMDl6VW1Kak5GbGpRMmx5YWxaTVJYaE9jbUZUVnpVeFh6Rk5NVkJyWW1sZlRFbG5ZMDFEYzBsNVoydFZRbUpXUVRoSU5YUXROVE55T1ZsZmQydFlaRVpKYlVoNVpVMUJOMGRSVTBFdGNXZHdjVzVPY0VJek9YUndaelpvZEZKQk1sZHJla05KUVc1T2Fta3dNeTAwUmtOVU9FbG5OWFZQUzFGVmNFUjNWek54VFZOWFZUUXdkemhuYkRkTFQzTm9aVFY2U1U1b1JVTmZZMVJVYjNkRldUa3RUa1pZVkZRd1lVVk5kV0V5Ym01VFVXUkRjWFpDWDNjeGMyeGhkbmhQWjFsbWVIaHpSV0ZzVEhjM1RHdFVNekZUV2xkc1N6bGxZV3REZEU5d1dqQTRMVVJsTmsxMFptTnpOMjlVZHpaRGEwZHJSVWhpUjNSd04yVjNPVE5sVTNWQ05VaDVWRTl1VDFkMFVtTklXa05vY2tKbldtY3hWWFJ1TVZWNlFYcG9PR0l6Y0VGMGRXTlNRbVl4VUZaeWF6TjJTbmwzWm1oblVXMVJTVVJVZUd4dU9ETmtPVkprWkMwNE9VRk1jRkZrYVhRek1URjNTemxCVFZCTVpUVlNVMlI1TkhaWFJFUXRhM0pJTFhsT1FtUnBZV2wyVVdGcU1WTmpjeTF0ZG1aT1ZIRXljV1p4TVVwcGFGUlFZMU4xWVZKeVVWcHBjR1ZaZDNsdVdIZFVlVlJ4V1RSMlYwSm9iRnBSYlVKMVdHeEZUVFJRUkV0cVEybEZla3BaVFZOMVRFNXJhRkEyWWkxSVlVZG9TR3BPVTBwb1Z6Sk9ZMmR3VTJWaFdIUlZlVUpYTkhwV2FHNWxSMmRaUm14Q01IUlFNa2xYZERobFpIRmpVQzFXWTIxMGRscDVUVjgwYkhKcWJ6aHhNa3hMZVZvM1EzcFhZVVZHUTFJMVNEYzFkbTVrYjA1cU9HaEJUWFZtUldOSFdHcEdjVFpXYld3MmMySktVbVYzYkVWcWNGVlZjbFJDVFdkdFdrVTNXVVJIWmpGdVlWa3pPVnB5VlZkQ1VtMUJRWEpOVUcxNmJFVkdNbkJEVEVocFgxTm1PREpuVFhJellXbE1VbWQ2V0hWaU1WUjZhSFpMY2xwa1NFbHNiWEZ2U1hoRU9IRndTblpsVm5OUWFVeHpRa2RrU1dOMFFUbHpTelZqTjIxWk5YaFFORzVZVkd0VFpGOWhTa1I0TjBzd1pHMTFUSGd6WW00M05sbFpRVll4VlhSeVVYaGZURTB5WVdRNWFEVm5OMnRhZUVsdlMxaG9hSGxxYVhCV1dWZ3pUbUZVZDNsMWVqUnZia3hDVXpGMmNUbHpWRzR6UlRSMExXTnpjVGsyZUZsek5XaHNTa2Q1VHpCalowWlROVEF0ZUZRNFRFMHRkWFZsWW1ac2FuSXdkVEoxYkVKNlpuRnJlVFpWWDBRNFdsZEVlWFZyZFUwd04zUlVXbnBKWlhKUFNXeE5NRWREWDFkQk0yRkZSRFpXVFY5dk5UbFNUMXBtZUhOUFdFRnFXSGxDVDJnd1NUUkpjRVl6WW1ocWNHSnhRa1JQWVVwcFZqaHNkeTVDWTJrMVkxbDFSMnRrWmpkQ0xUWlRUM0UzTlhwMy52WkZGeEtVX21jWnY4OVhoSXVGR1hwdHdmcU5GUGhxWGhjY2c1R2xoSlZrIiwiZXhwIjoxNzEwMzE2Njc1LCJpYXQiOjE3MTAzMTQ4NzV9.aIuS4SRtYAXAIZPnJ8WhegiDWrJLwFkef_79gaLa9K4\",\n    \"callbacks\": [\n        {\n            \"type\": \"TextOutputCallback\",\n            \"output\": [\n                {\n                    \"name\": \"message\",\n                    \"value\": \"oldPasswordNotMatch\"\n                },\n                {\n                    \"name\": \"messageType\",\n                    \"value\": \"2\"\n                }\n            ],\n            \"_id\": 1\n        },\n        {\n            \"type\": \"PasswordCallback\",\n            \"output\": [\n                {\n                    \"name\": \"prompt\",\n                    \"value\": \"Password\"\n                }\n            ],\n            \"input\": [\n                {\n                    \"name\": \"IDToken2\",\n                    \"value\": \"\"\n                }\n            ],\n            \"_id\": 2\n        }\n    ],\n    \"header\": \"Enter old password\"\n}",
							"code": 200,
							"cookie": [],
							"header": [
								{
									"key": "Date",
									"value": "Wed, 13 Mar 2024 07:29:27 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "3372"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "content-security-policy",
									"value": "frame-ancestors 'none'; font-src 'self' data:; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline'; default-src 'self';"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=63072000; includeSubDomains; preload"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "cache-control",
									"value": "private"
								},
								{
									"key": "content-api-version",
									"value": "resource=2.1"
								},
								{
									"key": "expires",
									"value": "0"
								},
								{
									"key": "pragma",
									"value": "no-cache"
								},
								{
									"key": "set-cookie",
									"value": "amlbcookie=01; Path=/; Secure; HttpOnly; SameSite=none"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "344"
								},
								{
									"key": "server",
									"value": "istio-envoy"
								},
								{
									"key": "Set-Cookie",
									"value": "AWSALBAPP-0=AAAAAAAAAAD2MwNGc7iEgbgHmOqaUPjuixphPGQjlZQTWl7RjafX7O2/X6PS2s87fW0OhgzHuic1cLTTb/HTMOWTgzQOy3jRhPGfDT7+A9fHdbfi7vBOppj0i/pslSNbGAu4V0ecnkEV4KS01e5Kbi8BzPFiwbMDZhgMNL4RjskGXMZ68PhK3HaYe9/3OIJnwS0KOJdrSXKmik+wiJJ7uMI090gEYMacFZ7/QHm1TZo26BONTI7SP+xNgbQrhzjkMWzsm5W+iApLk+Y/ImyNUl48r0brMEAJ; Expires=Wed, 20 Mar 2024 07:29:27 GMT; Path=/"
								},
								{
									"key": "Set-Cookie",
									"value": "AWSALBAPP-1=_remove_; Expires=Wed, 20 Mar 2024 07:29:27 GMT; Path=/"
								},
								{
									"key": "Set-Cookie",
									"value": "AWSALBAPP-2=_remove_; Expires=Wed, 20 Mar 2024 07:29:27 GMT; Path=/"
								},
								{
									"key": "Set-Cookie",
									"value": "AWSALBAPP-3=_remove_; Expires=Wed, 20 Mar 2024 07:29:27 GMT; Path=/"
								}
							],
							"name": "OldPasswordNotMatch",
							"originalRequest": {
								"body": {
									"mode": "raw",
									"options": {
										"raw": {
											"language": "json"
										}
									},
									"raw": "{\n \"authId\": \"\",\n \"callbacks\": [\n  {\n   \"type\": \"PasswordCallback\",\n   \"output\": [\n    {\n     \"name\": \"prompt\",\n     \"value\": \"Password\"\n    }\n   ],\n   \"input\": [\n    {\n     \"name\": \"IDToken1\",\n     \"value\": \"Yashsaraf12345@\"\n    }\n   ],\n   \"_id\": 0\n  }\n ],\n \"header\": \"Enter old password\",\n \"status\": 200,\n \"ok\": true\n}"
								},
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "accept-api-version",
										"value": "protocol=1.0,resource=2.1"
									},
									{
										"key": "accept-encoding",
										"value": "gzip, deflate, br"
									},
									{
										"key": "content-type",
										"value": "application/json"
									}
								],
								"method": "POST",
								"url": {
									"host": [
										"{{url}}"
									],
									"path": [
										"am",
										"json",
										"realms",
										"root",
										"realms",
										"customer",
										"authenticate"
									],
									"query": [
										{
											"key": "authIndexType",
											"value": "service"
										},
										{
											"key": "authIndexValue",
											"value": "selfservice_changePassword"
										}
									],
									"raw": "{{url}}/am/json/realms/root/realms/customer/authenticate?authIndexType=service&authIndexValue=selfservice_changePassword"
								}
							},
							"status": "OK"
						},
						{
							"_postman_previewlanguage": "json",
							"body": "{\n \"authId\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdXRoSW5kZXhWYWx1ZSI6InNlbGZzZXJ2aWNlX2NoYW5nZVBhc3N3b3JkIiwib3RrIjoiYXRnNDVlNGV0azgwYXVvZDlyaThlNWZ1ZDAiLCJhdXRoSW5kZXhUeXBlIjoic2VydmljZSIsInJlYWxtIjoiL2N1c3RvbWVyIiwic2Vzc2lvbklkIjoiKkFBSlRTUUFDTURJQUJIUjVjR1VBQ0VwWFZGOUJWVlJJQUFKVE1RQUNNREUuKmV5SjBlWEFpT2lKS1YxUWlMQ0pqZEhraU9pSktWMVFpTENKaGJHY2lPaUpJVXpJMU5pSjkuWlhsS01HVllRV2xQYVVwTFZqRlJhVXhEU214aWJVMXBUMmxLUWsxVVNUUlJNRXBFVEZWb1ZFMXFWVEpKYVhkcFdWZDRia2xxYjJsYVIyeDVTVzR3TGk1WVJIRnRhbEZZYlVwMVJWVXhaMFpKYW1kWE5HMTNMbUV0VjJSUFJtNTViMHRhTkU1R2NHaGlRbVJpYVVoQ2MyNXZVRGxSVkRaU1NGTktXbko0UjBveFQyaGFNVXBUTjNCSFJFZE9UVzFUWW5aRGFFOWtVMHQ1ZUhGNFpqVnhVRnBoWmpZeE5sbHdTSGRLZVdkbVRXRlZObHBuVEVFM1MyZzNZM05rZWxwTFp6WjJUVGRWVTBWbGQybE9VbEJVYm5CeFpISlhWR3BZY1ZWaU1HRnRVV0UxV0hsUE5qWk5SbVZKYjFwSFluUmlibWQwZW1sYVpqZ3lTak5UWkY4ek1uaDBjakZXTjNSeGFIWlhTRFl4VkhrMGRtNVpTWFpXYVhKT2NFcEdhRXBMWjJoU1dVWlFlVnBpV1dJdGFIVjRTM0JPUlZsa1RFSlpTREF5VHpKSFNXRkRWbXBUWkZacU4zSTBRelpZU2xSbmQxWXliVFJJYkRKeFNYQmphbTFJVVZGQ1lVOXVaMDFxWTFCMlpqZFBaemcwZEZVNE1WVXlWMDkyU0VWVlFVWlBYMHhETFZJNFJrUkZkbHBKYm5CYUxXUmxVMGg1Y0VWeFV6RmpWMWd3TjBOR2RHeHRNVUZmV0ZGdGJHdE1WWGN4U0VKNVlVTXpMV05MVjIxRFYwRjZOVzVOTldzeGIzWnNiME5oWmtSb1RVVTBWMlE1VUVKYVRVbFJUVUpWUzJoRlpYbzFVMTlyVERKWWQyMHdhWEJWUkUwemRqQlNWSE5zTlhWQ01FRlNORWRqTmtoMlR6aDNReTAyUWpZdGNsTXRiSGc0TFVKMGNYUnZSVUZrYWw5ZlZrTmlXR1p1VGpoT05rcGFWM2d4ZUVWTk0zVjBZMDVZTFVWR2JqZG5UbWx4TVZOdFJuRmlUemhPVmpBNVRraDBRWGxPU1c5bE5HaElTQzFDT1dJdGNVaDRlR3h4TldVMWVEZEJRM1JEYkRKVVZHbFFOazlFVmxSVkxWbGZSMnRCWW1saGFVRnlhV1JDTkhCdUxVRkJaRU00V2xSS2VGWnZNMFJTWlV0blVsQlhaa0ptYm1aVVNGVjZhMG95V25WVGVGcFhaR1V0ZFhaRU5rbEpjemhsV0VwR1JXNW9VMDQxVjNBNWNVVnFXVmhKWkVSWVl6SlRlVWRaWVV4TlkyWXpOVXBEV25aaFgwTXlUVGxDVUVWTWQzcHhZV1p2TFZGd05IZzFiMUZXYXpoTlVETk9YMnhRZG14dVlWOTBhMGx4WTFGWWNHb3ROMWxCU1dwc0xXbHhiR0ZDWmkwMmQwOTNjakJsWmxSNVRTMDFNM2RKYzE5RFVGVnZhelZmTUdoUFRrZ3RNa3cwVFRCSFZtWXdNRzFCTTB0MFpUaGhWMG96Wms1SGVqWXlOMmQzZEdaSlpHVklTVTFuUW1SR2NYaHVZbE53U0dWb2JFNXZNalJ4YXpSUVdVSXdNVlI0V0RWNUxYTTNkWEY2WkdGNlFVZDRTRUZDUTNaWVpuRXpRVFkxYTA1TFJtNVJlVXQ0ZDA1MFNWZGFiV0ZFVEhnMFZtWnhWRVJWVDI1cVJqbHZiV1owYlhWM1NIcGhYMEpUVEUxS1ozZFlhVVYzTVRoaFJFVlVhRlp0UnpaM1JrVlZiM1Z4YVdWa2VXbEdYM0pwWmpod1RVMVljbkZ0U3pWQ0xXZERRbGx0V20wNFlXNHpNRmgyZVU1NlFVNVZZbVJwZVdJMk1qRm1VRXBUVkZSTFgycHVRbFJVYjNGcVJYaG1SamhWVHpneWRuZHVSMUJyTWxSUU4yaExaMUkxUVdkNFdXOVdibkJUWVVRM2IzbHlZVTlNVW1oTU9IVlBaa1pTZDB0WmRXRnBNSGc0YTBKcFVVUnRlRVZqVlVneGVXSlRORnB1TlVOb09FNDFkM1ZDU2sxaU1EWlRlRlpzTlc1TFJYWmpha3QyUzFNeWRITlhXWGd4U0VKWk1YTTFaVTV1Y1RCMVJUQlZUSEk1Vm05UVZEaDVObEZCWTFCNmRrWm9abU15ZFVwMFNsWmxlQzFrYVRGaWVFUTVhbXhoY1dwc2JFWjNWbUZuZEV0Wlp6WlRlR3Q2T1VWVWQwTm5aV3B3U1dsamIxSkxkelpyU0c1dU1XbDZTMFozV0VOaVVGcFRPR0paV1hBeVgxZEhSMG8yVUZCamNXaHFhbnBKVURGUlNWVTBRekJtWTJSamJteHBTelJuYTI1VlZYbFVPSEEyYm5GdGRVVnlWVmQyYms1bVlqaGhTRXRJVldFeExXZGZlVmh4ZGtFNVNWbG1SRTFwTG0xcGJFNXRXa1ZHV2s5VlZETk5OMFpXVFRnMk5HYy5EUkZXNEhQYUlfNlY5SGxMVzZpVVZVS3I2bGVHT084Umx4QTBpOGxfelE0IiwiZXhwIjoxNzEwMjMyNzI0LCJpYXQiOjE3MTAyMzA5MjR9.gGlFfq2gPV2q3cHPbBd5tzDrIHD3kQO6BU9G9o9ZaYc\",\n \"callbacks\": [\n  {\n   \"type\": \"ValidatedCreatePasswordCallback\",\n   \"output\": [\n    {\n     \"name\": \"echoOn\",\n     \"value\": false\n    },\n    {\n     \"name\": \"policies\",\n     \"value\": {\n      \"policyRequirements\": [\n       \"REQUIRED\",\n       \"MIN_LENGTH\",\n       \"VALID_TYPE\"\n      ],\n      \"fallbackPolicies\": null,\n      \"name\": \"password\",\n      \"policies\": [\n       {\n        \"policyRequirements\": [\n         \"REQUIRED\"\n        ],\n        \"policyId\": \"not-empty\"\n       },\n       {\n        \"policyRequirements\": [\n         \"MIN_LENGTH\"\n        ],\n        \"policyId\": \"minimum-length\",\n        \"params\": {\n         \"minLength\": 12\n        }\n       },\n       {\n        \"policyRequirements\": [\n         \"VALID_TYPE\"\n        ],\n        \"policyId\": \"valid-type\",\n        \"params\": {\n         \"types\": [\n          \"string\"\n         ]\n        }\n       }\n      ],\n      \"conditionalPolicies\": [\n       {\n        \"condition\": {\n         \"source\": \"(fullObject.userName !== undefined && fullObject.userName !== '')\",\n         \"type\": \"text/javascript\"\n        },\n        \"dependencies\": [\n         \"userName\"\n        ],\n        \"policies\": [\n         {\n          \"policyId\": \"ciam-password-policy\"\n         }\n        ]\n       }\n      ]\n     }\n    },\n    {\n     \"name\": \"failedPolicies\",\n     \"value\": []\n    },\n    {\n     \"name\": \"validateOnly\",\n     \"value\": false\n    },\n    {\n     \"name\": \"prompt\",\n     \"value\": \"Password\"\n    }\n   ],\n   \"input\": [\n    {\n     \"name\": \"IDToken1\",\n     \"value\": \"\"\n    },\n    {\n     \"name\": \"IDToken1validateOnly\",\n     \"value\": false\n    }\n   ],\n   \"_id\": 1\n  }\n ],\n \"header\": \"Enter new password\"\n}",
							"code": 200,
							"cookie": [],
							"header": [
								{
									"key": "cache-control",
									"value": "private"
								},
								{
									"key": "content-api-version",
									"value": "resource=2.1"
								},
								{
									"key": "content-length",
									"value": "3938"
								},
								{
									"key": "content-security-policy",
									"value": "frame-ancestors 'none'; font-src 'self' data:; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline'; default-src 'self';"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "date",
									"value": "Tue, 12 Mar 2024 08:08:55 GMT"
								},
								{
									"key": "expires",
									"value": "0"
								},
								{
									"key": "pragma",
									"value": "no-cache"
								},
								{
									"key": "server",
									"value": "istio-envoy"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=63072000; includeSubDomains; preload"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "627"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								}
							],
							"name": "successfully / 200",
							"originalRequest": {
								"body": {
									"mode": "raw",
									"options": {
										"raw": {
											"language": "json"
										}
									},
									"raw": "{\n \"authId\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdXRoSW5kZXhWYWx1ZSI6InNlbGZzZXJ2aWNlX2NoYW5nZVBhc3N3b3JkIiwib3RrIjoiZmNkYmhpYWlscWlvdGE3cGxpdm84aG1ibjkiLCJhdXRoSW5kZXhUeXBlIjoic2VydmljZSIsInJlYWxtIjoiL2N1c3RvbWVyIiwic2Vzc2lvbklkIjoiKkFBSlRTUUFDTURJQUJIUjVjR1VBQ0VwWFZGOUJWVlJJQUFKVE1RQUNNREUuKmV5SjBlWEFpT2lKS1YxUWlMQ0pqZEhraU9pSktWMVFpTENKaGJHY2lPaUpJVXpJMU5pSjkuWlhsS01HVllRV2xQYVVwTFZqRlJhVXhEU214aWJVMXBUMmxLUWsxVVNUUlJNRXBFVEZWb1ZFMXFWVEpKYVhkcFdWZDRia2xxYjJsYVIyeDVTVzR3TGk1TlNrMUtiM1J3V1hwdWRGZFZOemhNYkVoWE0zWkJMbWRRWkdFeWVXOUJiMjV3YTAxSVYyMUxhRWxOUzNaaVp5MVVibVZNWkcxVWNpMHRVUzE1U1ZWNFlsVm9PRGg1T0dGRVlWWnZURWx4U1MxeE1IcGFNSFJDU0VVelJFdHFVM3BEVm1RM2NrOUtUMlp0WDJKaU9FNWplbkJUUzJsNGRHUkpXV3h2VkZod2JYbEpSMU5EY1hCbE1HTjRUbWxrTFRsSWVFbDZkbE5FUTNGSVUwRjFNa3BFZWpJeWRrVm9UakIyUjBwU1QzTXpOMlJNVEY4MVdXeFRhSEZuUVV0dVdFcFFNRkYzU2w5RFZsQmpXRFJITFdOdVVrSTNTMnR0UTBsbk1ESlBka1ZxVDNaR09GRTVTVVpyZFRsUFpsTjZRMU5zZEZjdFRFTm5XRE4zYUhOcWFtZFRSMlJPUmtsSFRuWnRVbTkzU21sSFVrMU5iMjlYUTNGUFZIcDJjRU5yU0hkd1NuUjNORU42ZDA1VVpFSm1hamRVV25JMVQyOXVMVkozZUdacVFVMWlOa1ZLVTFwU1pVNTNTRk5HY3pKSFEySmlTelJ2VkZOWU5EbEVNME52VjJaT1FteFhWMUZCUjNGWmNXMXpjV2RNYmpOMVNqZGhiSE5qV1cxMFNWQlViM2RYYVRnNFkyZDJVbVZLWVdwMFlXSk5VR3RZTkVzNU1IbGFjMWcyWlV0U1pHUjJVVEU1U25CdFdtczFiRlJPYVV3d1VYbG5lakJUUWxwVmFWaEdNR1o0UWxrMlUzWllYekJJWVhaWFYzbGtlR05TWjNKZlpHNHlTMXA2U210Rk5tRnhMWEJxVVRScFUyd3laVlZWYTA0MFFWRTNRemhYTVVGMVRXcDJWVTFCZHpWMWNqSTJiWHBPTUZsUkxXdE9UVUY0YjBjMVRWUm9ZbEJtUXkxWFZsZzVjVlZtYm5wdGFrdHlaRTUxUTNkcGNWQmZVM2htZW1kNWRESmFTMFJZVDJWTlZsUnpSMFJVU0VSU2FHdERWMjAyUzNWNWF6azNXSGd6ZEhSUk5tMDBVbkJsTW5RNVIwTnNiV2w2Y0dKaGRHMXJVSFYzUzFaME9YUm5iMGh5VFdaclRrcEJZbUpOTVhKbmMxTXlSRzFMYWpWeWNGTnZTbVZUU2xwVGRtUkxNVTl3Y0hGTFdrMVpkM2RRYzNSamFURkpTMGxLYUcxUWJXNUxjWGREU0VsQ1gyRkZSME51WkRJdFlrMUhiMVIyY0ROMWFEazVSVGhhVW01bWJEUnlkVVJCYmtaUWRqbHFabVZOUVZwU1Rtc3RRV0kxT1ZwSlJrNVJabGt6UVVNemIyOTZTMUJIZWswdFZHTlBRM3BTYjFaT1VISXlRVmhGZEVJd1FXdFVVMkZNUTFadVN6VkdVRmRRUWxsVU5rY3RXVUZyVVROdU5VaEdXRmhTWkhkaVMxVjVNVzlrVVZwQ00xQmtPV1o2WW5sTk9IY3lRMHBCZUMxbGJuSlNNRFpRYVVSdkxXRkdURVJpYTJFNGF6aFVaRVkxU1hObVZXY3dObFozT1RKMlFrVjBZMGN4ZEVFM2FEaHFZeTFQUkV0dldIRmpUM1JVWTI1bVIwNXFMV3QxWkd4MmEycE5UM0JVWlRSR1NrMW9VUzUwU25wdmJUQmhjSFJpTWtoM1lXNTRRMVJQTkRsQi5Db0EzaGV1cVB3SWVGc0Ezd0c4TXNQeWtSNk91S0dGUDlqVTVPMV9MZGVRIiwiZXhwIjoxNzEwMjMyNzI0LCJpYXQiOjE3MTAyMzA5MjR9.gfRFA1Q3slixfC28hXAFtFhPnm5wfPe_QrC7gQK7HaE\",\n \"callbacks\": [\n  {\n   \"type\": \"PasswordCallback\",\n   \"output\": [\n    {\n     \"name\": \"prompt\",\n     \"value\": \"Password\"\n    }\n   ],\n   \"input\": [\n    {\n     \"name\": \"IDToken1\",\n     \"value\": \"Kapstone@12345\"\n    }\n   ],\n   \"_id\": 0\n  }\n ],\n \"header\": \"Enter old password\",\n \"status\": 200,\n \"ok\": true\n}"
								},
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "accept-api-version",
										"value": "protocol=1.0,resource=2.1"
									},
									{
										"key": "user-agent",
										"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36 Edg/121.0.0.0"
									}
								],
								"method": "POST",
								"url": {
									"host": [
										"{{url}}"
									],
									"path": [
										"am",
										"json",
										"realms",
										"root",
										"realms",
										"customer",
										"authenticate"
									],
									"query": [
										{
											"key": "authIndexType",
											"value": "service"
										},
										{
											"key": "authIndexValue",
											"value": "selfservice_changePassword"
										}
									],
									"raw": "{{url}}/am/json/realms/root/realms/customer/authenticate?authIndexType=service&authIndexValue=selfservice_changePassword"
								}
							},
							"status": "OK"
						}
					]
				},
				{
					"name": "Submit New Password",
					"request": {
						"body": {
							"mode": "raw",
							"options": {
								"raw": {
									"language": "json"
								}
							},
							"raw": "{\n \"authId\": \"{{authId}}\",\n \"callbacks\": [\n  {\n   \"type\": \"ValidatedCreatePasswordCallback\",\n   \"output\": [\n    {\n     \"name\": \"echoOn\",\n     \"value\": false\n    },\n    {\n     \"name\": \"policies\",\n     \"value\": {\n      \"policyRequirements\": [\n       \"REQUIRED\",\n       \"MIN_LENGTH\",\n       \"VALID_TYPE\"\n      ],\n      \"fallbackPolicies\": null,\n      \"name\": \"password\",\n      \"policies\": [\n       {\n        \"policyRequirements\": [\n         \"REQUIRED\"\n        ],\n        \"policyId\": \"not-empty\"\n       },\n       {\n        \"policyRequirements\": [\n         \"MIN_LENGTH\"\n        ],\n        \"policyId\": \"minimum-length\",\n        \"params\": {\n         \"minLength\": 12\n        }\n       },\n       {\n        \"policyRequirements\": [\n         \"VALID_TYPE\"\n        ],\n        \"policyId\": \"valid-type\",\n        \"params\": {\n         \"types\": [\n          \"string\"\n         ]\n        }\n       }\n      ],\n      \"conditionalPolicies\": [\n       {\n        \"condition\": {\n         \"source\": \"(fullObject.userName !== undefined && fullObject.userName !== '')\",\n         \"type\": \"text/javascript\"\n        },\n        \"dependencies\": [\n         \"userName\"\n        ],\n        \"policies\": [\n         {\n          \"policyId\": \"ciam-password-policy\"\n         }\n        ]\n       }\n      ]\n     }\n    },\n    {\n     \"name\": \"failedPolicies\",\n     \"value\": []\n    },\n    {\n     \"name\": \"validateOnly\",\n     \"value\": false\n    },\n    {\n     \"name\": \"prompt\",\n     \"value\": \"Password\"\n    }\n   ],\n   \"input\": [\n    {\n     \"name\": \"IDToken1\",\n     \"value\": \"{{newPassword}}\"\n    },\n    {\n     \"name\": \"IDToken1validateOnly\",\n     \"value\": false\n    }\n   ],\n   \"_id\": 1\n  }\n ],\n \"header\": \"Enter new password\",\n \"status\": 200,\n \"ok\": true\n}"
						},
						"description": "> Submit the New Password.Different values for variables will result in different responses (refer to examples).",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "accept-api-version",
								"value": "protocol=1.0,resource=2.1"
							}
						],
						"method": "POST",
						"url": "{{url}}/am/json/realms/root/realms/customer/authenticate"
					},
					"response": [
						{
							"_postman_previewlanguage": "json",
							"body": "{\n    \"authId\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdXRoSW5kZXhWYWx1ZSI6InNlbGZzZXJ2aWNlX2NoYW5nZVBhc3N3b3JkIiwib3RrIjoiYjVtOXNhbThoNGZoY2JocDIwZDNxOWY4NzciLCJhdXRoSW5kZXhUeXBlIjoic2VydmljZSIsInJlYWxtIjoiL2N1c3RvbWVyIiwic2Vzc2lvbklkIjoiKkFBSlRTUUFDTURJQUJIUjVjR1VBQ0VwWFZGOUJWVlJJQUFKVE1RQUNNREUuKmV5SjBlWEFpT2lKS1YxUWlMQ0pqZEhraU9pSktWMVFpTENKaGJHY2lPaUpJVXpJMU5pSjkuWlhsS01HVllRV2xQYVVwTFZqRlJhVXhEU214aWJVMXBUMmxLUWsxVVNUUlJNRXBFVEZWb1ZFMXFWVEpKYVhkcFdWZDRia2xxYjJsYVIyeDVTVzR3TGk0NWFsaFhNRlZFZUU5T01tZEVXVE5GWm5FNFFrdDNMbEJPWVZOSFdTMHpUa1IyV2xOVWNVUmZOWHBZV1daYU4yZDZNSHBwV2xKTmNrbEljM3BPVFZWdVVqSjZlbU0zT0hCUFowRk5NMk5oVGtSU1ZuaEJYelUyZDA4eWIzcERTbFJCYlMwd1RTMXRNVmhEUTJoVVNGVk1PVWhRZG5OSGMwMUhPRWRKTFZOcmFuRlpWSE5xYUROeFducEZjUzFzVFd3MWJGRm1jV2Q0UTNCVWVsbEljV2RVZFc5MGRsbzBiMUJWYjAxb1JFaE1YM05TYWpjNGFDMWpWVUoyWWpZdGEycHpiR2x3Y0ROT1lrTllhekZQWjBsa01VNVVRVGhuUWkxSFUzVkVZVFp5YlhGdVJDMUxkMFZyTldWM2QwUmFUa0ZUTWpOdFNUQTBhMUZwZEZOSFFWVjJXVTlpZUVoNVpWSktlSGRFVnpZeU1FUklVbVpqUVc1MVZIZHRNbmhhTmtsU1RFdG1URkJUU0ZwUVYwTm9WRFY0WWpaS1NWZzBNR3BrY1VwU1dXcDNNell5Y3kwelNWSTFlQzFvV1V4M05HbE9ZbGxxUkVwcWFVcEZaa1pHTlhGTVJGOUJjVGhDUzJkdGVGTjFRbFpxY2pCT2IzbHJNM0V0VW1oeFVFRnVMVXRIU1ZGNVVWSnFRakF0V1VOcWNqVlpTek5zYWxBd1ZtMW9Ra0ZQUmpOak5VSklZVkJWYlc5TFRXMWlTMVpNVFhNNFYwNTRRbWhtTTBKS1RucE9ibTlQUjNVM1VUaEZSSFZ1Y0U5c1RYcENkMGh1T1dvMVFuVmhXWFpaWW1sMlRXWXhjMFJMZEU5U1RHSTFMVGd6ZEVFeWJGRmlaRWhaVkVnMExWRlFhek5UU0ZWbmFWUlRWbkIzZDA5SWExSXhlRzlOWTFWYWIybHBYMmR3VTNkNlRIQldha2hPV25OaVJtNW9ZMDVwTTJOek5tbGFkRmN0UTIxeE1YVnJabTVHV1VKWFlYQjFlVmxFVTBGWFJrTkVZM1E1ZFhkMVZYTlRNRVJ1UlZsaWVXVnZaSGx3YjJGV1NHMXlYM051Wkc5RVZWQmpTVFZ6ZUZaWGJFUkhUMlJ5TFROdGMwRkVSMjh4Y1dKTlltMDRUakYzUVZOdlIya3pjRzV6U1dGdFNXRTJRbEV6U1d4TVRHUkhWakpwZFhoM1lsaFNjemRFZW5sTGJFUm9ObkZJYlZWcFEzVTFNa1oxY3pGa1dtTlFaMUpRWVhCRGQxOUpkVzVRZUZOamRrVkdjelUzVTJaaFJHaFJXalJLVG5ob1gwUmlhalp1VW1sTlZqRXdXRWRuT1hSamVFMWxkVEJEUXpCa1ZqUlVNRXhDYkU5WGVXMHRkMlJyU2kxUlNubFVRbGxDV1c4MVZYZHNhSEpCV0hCWWExcHFiVUZ5TldoTlMwWmlha3hXV1cwd2RtbDFia3R3YmxZeWRrZDRYM0pXWlRCaVgxVkhMWFptVG1wWE9WbG1jekZIYjJOaE9GQldjMDVXTlhRNU4wTnhNbmhKZFdwMVREYzJZMEoxVFZWUmFqTnRjemRZUkhobFRXeG9VRUYwTTB4QmR5MWtlakkwVnpGRlZFOXZTWGgzTjB4cWRUWk1jemN6V2pWbFpGQTNkVWxMVGxWdldsQlVjbTlNYUc5WlgySklTVzltVmxGRmFpMXhNVTVYZHkxek1HaHlTRTAwUmkxck4weENlRzE0TVU1Zk5VbFhaMkkxU2xCWGFqSk1ZV0pzUlc5VlRIZFZVakU0ZGpSWVV6ZFVaM0kwZGxCR2NXRmpjbTVzT0RJM1ltMXlNMU10ZVMxWVpUZEpWeTAyVWxrMVFUVjNkVTVtTFVoaFRtSnFRa0pJY25VM2IxZGtiRVpGTWtKYVZVeFpUblkzZVRaWlQzZHhOVFJPYTIxRlV5MDVSR0pKWWxCNlVHSjJMa1pCVVZOV1ZGRlRSalIxZUhwNGFsRmtlRVJ5WjNjLktWMC1ncmxMc3V3c0hES2hWRWF1SGpkYm5wbXBlS1JvdnhOSEZza3lUZzgiLCJleHAiOjE3MTAzMTY0NzAsImlhdCI6MTcxMDMxNDY3MH0.apQxT3Yl_rfhTBZ_18PsAQz3HZVXt9D9rVA5BoqFSp0\",\n    \"callbacks\": [\n        {\n            \"type\": \"TextOutputCallback\",\n            \"output\": [\n                {\n                    \"name\": \"message\",\n                    \"value\": \"Password was changed\"\n                },\n                {\n                    \"name\": \"messageType\",\n                    \"value\": \"0\"\n                }\n            ],\n            \"_id\": 2\n        },\n        {\n            \"type\": \"ConfirmationCallback\",\n            \"output\": [\n                {\n                    \"name\": \"prompt\",\n                    \"value\": \"\"\n                },\n                {\n                    \"name\": \"messageType\",\n                    \"value\": 0\n                },\n                {\n                    \"name\": \"options\",\n                    \"value\": [\n                        \"Yes\",\n                        \"No\"\n                    ]\n                },\n                {\n                    \"name\": \"optionType\",\n                    \"value\": -1\n                },\n                {\n                    \"name\": \"defaultOption\",\n                    \"value\": 1\n                }\n            ],\n            \"input\": [\n                {\n                    \"name\": \"IDToken2\",\n                    \"value\": 0\n                }\n            ],\n            \"_id\": 3\n        }\n    ]\n}",
							"code": 200,
							"cookie": [],
							"header": [
								{
									"key": "Date",
									"value": "Wed, 13 Mar 2024 07:24:44 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "3062"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "content-security-policy",
									"value": "frame-ancestors 'none'; font-src 'self' data:; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline'; default-src 'self';"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=63072000; includeSubDomains; preload"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "cache-control",
									"value": "private"
								},
								{
									"key": "content-api-version",
									"value": "resource=2.1"
								},
								{
									"key": "expires",
									"value": "0"
								},
								{
									"key": "pragma",
									"value": "no-cache"
								},
								{
									"key": "set-cookie",
									"value": "amlbcookie=01; Path=/; Secure; HttpOnly; SameSite=none"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "827"
								},
								{
									"key": "server",
									"value": "istio-envoy"
								},
								{
									"key": "Set-Cookie",
									"value": "AWSALBAPP-0=AAAAAAAAAADh8UvBL8CwiSfY3ylKKPIFA4Qlkl5e2dgeC2N9xq7bA0bAVqycMzh+DOIvdPSto3Z9/xTFA7Dw4Kb9dgP3mXwNVwVHr+tVErUE9ntlXJkoSki7C29sDmwWRtPsb7pKRAwMngb1v65v35Lj0hDZA2DDeJQRFXASxU+nVR6KGTdmxI4Ovh+XZ8ohEeFPQwCt8qGRe1qyBMowkWKXtfX4fDKV34TZmbnlHOvox5FoltqQ4j4tQidbHqiQlrvQmSX/MvuUYVbk/KW6TR/s/xCpnSch; Expires=Wed, 20 Mar 2024 07:24:44 GMT; Path=/"
								},
								{
									"key": "Set-Cookie",
									"value": "AWSALBAPP-1=_remove_; Expires=Wed, 20 Mar 2024 07:24:44 GMT; Path=/"
								},
								{
									"key": "Set-Cookie",
									"value": "AWSALBAPP-2=_remove_; Expires=Wed, 20 Mar 2024 07:24:44 GMT; Path=/"
								},
								{
									"key": "Set-Cookie",
									"value": "AWSALBAPP-3=_remove_; Expires=Wed, 20 Mar 2024 07:24:44 GMT; Path=/"
								}
							],
							"name": "Password was Changed",
							"originalRequest": {
								"body": {
									"mode": "raw",
									"options": {
										"raw": {
											"language": "json"
										}
									},
									"raw": "{\n \"authId\": \"\",\n \"callbacks\": [\n  {\n   \"type\": \"ValidatedCreatePasswordCallback\",\n   \"output\": [\n    {\n     \"name\": \"echoOn\",\n     \"value\": false\n    },\n    {\n     \"name\": \"policies\",\n     \"value\": {\n      \"policyRequirements\": [\n       \"REQUIRED\",\n       \"MIN_LENGTH\",\n       \"VALID_TYPE\"\n      ],\n      \"fallbackPolicies\": null,\n      \"name\": \"password\",\n      \"policies\": [\n       {\n        \"policyRequirements\": [\n         \"REQUIRED\"\n        ],\n        \"policyId\": \"not-empty\"\n       },\n       {\n        \"policyRequirements\": [\n         \"MIN_LENGTH\"\n        ],\n        \"policyId\": \"minimum-length\",\n        \"params\": {\n         \"minLength\": 12\n        }\n       },\n       {\n        \"policyRequirements\": [\n         \"VALID_TYPE\"\n        ],\n        \"policyId\": \"valid-type\",\n        \"params\": {\n         \"types\": [\n          \"string\"\n         ]\n        }\n       }\n      ],\n      \"conditionalPolicies\": [\n       {\n        \"condition\": {\n         \"source\": \"(fullObject.userName !== undefined && fullObject.userName !== '')\",\n         \"type\": \"text/javascript\"\n        },\n        \"dependencies\": [\n         \"userName\"\n        ],\n        \"policies\": [\n         {\n          \"policyId\": \"ciam-password-policy\"\n         }\n        ]\n       }\n      ]\n     }\n    },\n    {\n     \"name\": \"failedPolicies\",\n     \"value\": []\n    },\n    {\n     \"name\": \"validateOnly\",\n     \"value\": false\n    },\n    {\n     \"name\": \"prompt\",\n     \"value\": \"Password\"\n    }\n   ],\n   \"input\": [\n    {\n     \"name\": \"IDToken1\",\n     \"value\": \"Yashsaraf12345@\"\n    },\n    {\n     \"name\": \"IDToken1validateOnly\",\n     \"value\": false\n    }\n   ],\n   \"_id\": 1\n  }\n ],\n \"header\": \"Enter new password\",\n \"status\": 200,\n \"ok\": true\n}"
								},
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "accept-api-version",
										"value": "protocol=1.0,resource=2.1"
									}
								],
								"method": "POST",
								"url": "{{url}}/am/json/realms/root/realms/customer/authenticate"
							},
							"status": "OK"
						},
						{
							"_postman_previewlanguage": "json",
							"body": "{\n \"authId\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdXRoSW5kZXhWYWx1ZSI6InNlbGZzZXJ2aWNlX2NoYW5nZVBhc3N3b3JkIiwib3RrIjoicjh2NTNxbTg5b3Y2ZmpwZTQ2OG42OGp2aDIiLCJhdXRoSW5kZXhUeXBlIjoic2VydmljZSIsInJlYWxtIjoiL2N1c3RvbWVyIiwic2Vzc2lvbklkIjoiKkFBSlRTUUFDTURJQUJIUjVjR1VBQ0VwWFZGOUJWVlJJQUFKVE1RQUNNREUuKmV5SjBlWEFpT2lKS1YxUWlMQ0pqZEhraU9pSktWMVFpTENKaGJHY2lPaUpJVXpJMU5pSjkuWlhsS01HVllRV2xQYVVwTFZqRlJhVXhEU214aWJVMXBUMmxLUWsxVVNUUlJNRXBFVEZWb1ZFMXFWVEpKYVhkcFdWZDRia2xxYjJsYVIyeDVTVzR3TGk1NFRVVkJaM2MyY2kxQmN6UjVaMWQwYldsNFYzWjNMblJHYW1rMU0zTnplR3cxZUROWWJVVnljM0Z6Y1ZOdWRrMXBUV0Z0ZEUxV2VVSmplVTFZYW1KT1N6WmtZblpRUTBOVWJHbFBWRzgzZDBsVE1FbFRiV3RHWkVOTmIzSkRka3BUWmpFMVVHOUVhR1pRTFdaeVlXdzVVRXQyWTBwYVkyOVVkazU0YzNOeWFIQnNWRlZwV0RFeU1HMVpXVFJWV1hNNFRGVkpiVE5VTmxVM1JtTmpkM1pJV2pVM2NUUmZXbVJFVkd0SU1UZEROeTFGWjBoQ1kxOWpOVXMyWjNVMWVuSXhjbFp3ZDNaVWFYTkdkR0o0WDBwNVZGazVNbTgzZFY5VGJIUmtTWGQ1YTFsYVZtSTRiM1V6ZW1oa2EwOUdlbVZXUTA1NGFHeHpUekEwZEdKUWJVOHpValpYTVhsVVpteFhNV2haUnpKMFVFTjNWMDFPU0dWNk5teERSbkJaTTNkalMySXlRVk5tT0ZSS1UxY3pPV2MxUVVFMVFVaFRNRUZwYVZwalZrMUdiMDlJYWxCU2N6Z3lhbUkxWkVWR1psVnhXbEZOTlhoZlJEQkxUalpYUldGUWMweENZMmR6VjBJd1FrTnJjWEl6UzBseVRqZGFVVmhVUjNORVNrOWpVSGxPYjFRNFREVlVNR2xXU0VFemRWSkRNMGhzVDBNeVdGaGhMV3g2YzI4eFZFSmFRVWRNVlZkc01GVlVlRzFLT1dWTmIwRTBORXgyU0ZSWVNXcHpTWFY1UW1GME5HVTFTMU5MTTFVNVNrVndhbEpNWXpWTWJISnJRa0k0VFVkWWRqVnpUVUZmWTB4VWVrWTRTV1Z3Y1hOa01sVkJhRGxHYzFGVFNGZ3RVMnhaYTB0d1VtOUZTVmxpWTFSVVpGOU9ZemxRWTIxeVlsQkZXa0pZU1dOamJWSm5ORFJzVjFKeU5qbExYM0V6V20xUVdWQXplVmhZVGxGZk1FRnVPVWhmUVdSaExUWmFNbXRKVFVwdmREaHhMVEZHV2xKUmNuUkNZMFJ0WW01aFQydFhNSFZZZW1rellXVlJXVFJoVG5wM1MwVXhaMEoxWkRZd2VXRkdkblF5TFZGeldUSldUMlYyYjNwVlZsazNWRzVQZDNkMlRVWlJkWHBuVUU5WkxWQldTRTVNVjJwTFlucE9SblZUTW1KT1EyaEtWa3N5UlZaNFdXNWhUamxNVjI5RExUbElNMU5hYkZOa2FWaGlWRzlVU0dOTGVsVkJWSFo0VmpCNGNqVnRWMnhIWjBSaWNHcFlhbXBLYkhwbFpWTnJSSEpwY205WFRXTjFkVWxMT1dGSFVFOU5TV1JyWWxNMk4wSlBRVlp4YkRBNWFuTkNkR3gxZURkR1gwUTJhVE51T0cxQlRIVnRhRE5OTUhKUGMwMWliblYxZUhkWlRGcHVXVU5pVkhoTFZUQTVSM2xRU0RWV1NXWmhlVXRpTW5neVQySnNaMFZmUzI1SlYyUXRPWFJXVTNkTE9XWnRUWEZYZUZRelIwdExhR2t0Vmt0MFh5MUdSbWh5ZHpOeVdVWTFOWFZZTVV4R2FITnBhVXhWWlRWSlMycEpTM2xhVjFsdmRrdDVUbVkyYldnM1kxY3pTbkZ1YTBkV1RVdHlXV0ZRTUMxUlpHbFJhMDVoYzNCQmNGUXdXVmhCZHpCSVpUUTFjRzluVDJ4emJtZ3lhazA1Y1dKcFJGazRkVEp1TXpCNmFVTXlZbEJXYUVkVFozVlZTVXBSYjJGTGRTMWlTVk54V1dJd1dETkxSM05tT1hwWFZVMURXa2hOWTBSNU5sUktRa1JWV0dKYWVFMVRhMXBsUzJFdFYzZEZjbGhOYTIwMFRrVmplVjh5U0Uxb2FUUkxRMlEwTkdzMlNXSjRlRWswY0dodlVHUjJTR3c0VjNWb1JUUXllbGRNTkMxM2JtZHpNbGxLTmpWamFVdHpZVVZVTTBwbE1EaFFTRWt3Y1hsNGRIRmhiM1ExUVhZMVlXWkdPVmhTWmxRMk5DMUNkV1ZhV0d4cmVVSldWakZ4Y0RGU2NWaG5ZazlKYmw5d016SjZOMFJJVVZad1VsSm5UaTB3VkhGU1NFbHdiR2hTTVMxak4wTjRjVkZXWjI5S1RrOUVNa2RTU1RWSldHWnBibnBLYUU0NFkxVTRUV2cwTWxOTmJGUkZZVmMxZEVaNVdWZExZVlpUUlVGNVZHVkdOM0ExWHpOMWVHOUJhamR2VGtGdFNqRlVTMHA2YWpWbVNtdEdYMHBZY1cxb2MzQm5hRmwxWkROblQwVjJVMGxQVFZRelkwdHZNbGhKTUV3d1lUQXRiVlJ3VDJ0elNWVjRSREl4ZERkM2JsRnpMWEZvT0RoMU5XUjNOemxWZGpGTFJWODJXbll6Y2xSSWEzWmZPSFV4U1ZGbGJ6RkVhRWxhVWpOc2RtcFdZMlF4ZVdkUFYyRm9ORXhLUlZwbE9ERmhOMU5sTFRGWk16RnVjVlE0T1RCdVNrbFBkMmxKYW1VeVkxVkRVbmQ1YkdSSE1sTkNSalpoUWtSbFVHSTRjelpmYW1sTlpFRlZkVWhFU0ZaUlMyWXdNbUkyTm5Sb1lrTjNiVFIxVm1wMVoxWnNWR00yUnpkRFZqWldSSGxxTjJkVVRtSmtOV041VVRnMmQyVXpRVnBHWm1WNFFXWkdTeTAwUVVWeWRWWlVWazVQTTAweVRuUndaWG96Ym5KTVdWVlhUMTlzUzJoa0xVSnhiRzVzUTFseFEyTnpTVzFNWDBOamJYRTBUR2x6Y2xwTVVWTndXRmwyWDFVeE4zbzJTVGt0VTJkNWJsUnRRbUpPTTJNMVpIVm1kR0ppV2xoNU5qZGtia1IzTlZOdldUZFBia3hUVmpoWFIxSnphMnRLVG05MGJFSnVXblpHWWsxNFZ6VXlkbTVrZUhGQmNsWlNRa05ZVVdjeGF6aFlOVXREZDIxeE1WUXdUMUpoZDJsUVNWODRSMU10WVhwM2J6SkVZMjFmWnk1cVkxUmhNMEZNYkRGS1FUZDRRVVkzTkhKUFZETjMudXh1VEhXVjlkXzh6b0tMbmdtZnFEd1kwU05LeVBLRjVhV09JSzMzWmQ3ZyIsImV4cCI6MTcxMDIzMjcyNCwiaWF0IjoxNzEwMjMwOTI0fQ.GUPQlTlMOxzNhjMDITp_AT4N8CarKwu70XTYYmGMVgE\",\n \"callbacks\": [\n  {\n   \"type\": \"TextOutputCallback\",\n   \"output\": [\n    {\n     \"name\": \"message\",\n     \"value\": \"passwordPolicyNotFullfilled\"\n    },\n    {\n     \"name\": \"messageType\",\n     \"value\": \"2\"\n    }\n   ],\n   \"_id\": 16\n  },\n  {\n   \"type\": \"ValidatedCreatePasswordCallback\",\n   \"output\": [\n    {\n     \"name\": \"echoOn\",\n     \"value\": false\n    },\n    {\n     \"name\": \"policies\",\n     \"value\": {\n      \"policyRequirements\": [\n       \"REQUIRED\",\n       \"MIN_LENGTH\",\n       \"VALID_TYPE\"\n      ],\n      \"fallbackPolicies\": null,\n      \"name\": \"password\",\n      \"policies\": [\n       {\n        \"policyRequirements\": [\n         \"REQUIRED\"\n        ],\n        \"policyId\": \"not-empty\"\n       },\n       {\n        \"policyRequirements\": [\n         \"MIN_LENGTH\"\n        ],\n        \"policyId\": \"minimum-length\",\n        \"params\": {\n         \"minLength\": 12\n        }\n       },\n       {\n        \"policyRequirements\": [\n         \"VALID_TYPE\"\n        ],\n        \"policyId\": \"valid-type\",\n        \"params\": {\n         \"types\": [\n          \"string\"\n         ]\n        }\n       }\n      ],\n      \"conditionalPolicies\": [\n       {\n        \"condition\": {\n         \"source\": \"(fullObject.userName !== undefined && fullObject.userName !== '')\",\n         \"type\": \"text/javascript\"\n        },\n        \"dependencies\": [\n         \"userName\"\n        ],\n        \"policies\": [\n         {\n          \"policyId\": \"ciam-password-policy\"\n         }\n        ]\n       }\n      ]\n     }\n    },\n    {\n     \"name\": \"failedPolicies\",\n     \"value\": [\n      \"{ \\\"params\\\": { \\\"minLength\\\": 12 }, \\\"policyRequirement\\\": \\\"MIN_LENGTH\\\" }\"\n     ]\n    },\n    {\n     \"name\": \"validateOnly\",\n     \"value\": true\n    },\n    {\n     \"name\": \"prompt\",\n     \"value\": \"Password\"\n    }\n   ],\n   \"input\": [\n    {\n     \"name\": \"IDToken2\",\n     \"value\": \"\"\n    },\n    {\n     \"name\": \"IDToken2validateOnly\",\n     \"value\": true\n    }\n   ],\n   \"_id\": 25\n  }\n ],\n \"header\": \"Enter new password\"\n}",
							"code": 200,
							"cookie": [],
							"header": [
								{
									"key": "cache-control",
									"value": "private"
								},
								{
									"key": "content-api-version",
									"value": "resource=2.1"
								},
								{
									"key": "content-length",
									"value": "4879"
								},
								{
									"key": "content-security-policy",
									"value": "frame-ancestors 'none'; font-src 'self' data:; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline'; default-src 'self';"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "date",
									"value": "Tue, 12 Mar 2024 08:09:13 GMT"
								},
								{
									"key": "expires",
									"value": "0"
								},
								{
									"key": "pragma",
									"value": "no-cache"
								},
								{
									"key": "server",
									"value": "istio-envoy"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=63072000; includeSubDomains; preload"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-envoy-upstream-service-time",
									"value": "49"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								}
							],
							"name": "passwordPolicyNotFullfilled",
							"originalRequest": {
								"body": {
									"mode": "raw",
									"options": {
										"raw": {
											"language": "json"
										}
									},
									"raw": "{\n \"authId\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdXRoSW5kZXhWYWx1ZSI6InNlbGZzZXJ2aWNlX2NoYW5nZVBhc3N3b3JkIiwib3RrIjoiYTNkbTZlcXBla2xraXBtbXRrZmwxNmFoYmciLCJhdXRoSW5kZXhUeXBlIjoic2VydmljZSIsInJlYWxtIjoiL2N1c3RvbWVyIiwic2Vzc2lvbklkIjoiKkFBSlRTUUFDTURJQUJIUjVjR1VBQ0VwWFZGOUJWVlJJQUFKVE1RQUNNREUuKmV5SjBlWEFpT2lKS1YxUWlMQ0pqZEhraU9pSktWMVFpTENKaGJHY2lPaUpJVXpJMU5pSjkuWlhsS01HVllRV2xQYVVwTFZqRlJhVXhEU214aWJVMXBUMmxLUWsxVVNUUlJNRXBFVEZWb1ZFMXFWVEpKYVhkcFdWZDRia2xxYjJsYVIyeDVTVzR3TGk1SkxXZDVSa1pvWDNoTFJVNU1TbHBhVWpCUE9IcG5MbVpwWkhZMlRDMVVOR2xTTjJaUmJDMXZOMlZQUldsQlFVeEJPVTFKU1hCYWVqVktNbGh3UjNWSE4ybE9RMFJGVG1aRWFGUlJlR0p6U1hCalRHVk9jMEpOV0ZOeGExcHVNVTlaTnpoNVgwdHNSaTFvWkZOelRYSnZMVlUwVWpWUmNsTmlMWFYxWlhOcmRYSk5iVU50Um01WFFVNWlUR1ZoV1VadGRYRm1TRlZvVVhsVFowbEhkM1ZXYUVkSWFFSkhTMU5vUkY5RmVWVjZPSGc1ZW1wamQxQjZlamhwUzNWeE5qbEdNM1owVVc5SE9EWTNOMEZrTXpZMWN6VTJTV0pXWVY5WmNYRnVjaloyUzJOdFRHVlZWMkZSYUd0VWRHWnhaa1ZyY2xCNmRrUk5aMEZFT1d4SUxWOUNNMjFYV1c5VlJrNTNVa1JHZEc1VlQyNXhibHBWWm1Wb1JqbDZkRzB4UzBKb1pYaFlZVVkxUm1sbldGWmtTVVp6WTJ4cmVrUjBSVlpQV0UxZmVFVkJOR05NY21aNWJrUnlVMFJFWkZsQ1RUTkpMV2gxUkZWUExWQm9ObVppYzNWRFVVMVJTamhVZFZkdFdEbElVM2h4VTFObVNFRTBWbFJrVjBGcGNqZDBOVlZvYVhWWFVqYzBSV1JEU3psVFJtMWFWVjlpVVZFeFRtMTRUa2t6VUhsNlkyNXpVR2xoYW1aaldVMUtjRFJoU2twYWNUVjNWMkpzVmxGZlpGazRUV3BoYWtFemJtNUhlWHBRVURGemMzcDZTVFE0Y1dobE9HRk1VSEJHTW5FeFdYSXpUek52VFVObldsaGpUakJrVDJsb2VrMW9RMTlVWHpNeVdsUkdWQzFmWW5WSWVpMVFhRFpQUlhwVE1WUnhiR1p5V1ZoNlRIbG9ZV3RITVVkME9VWm5kbkZFTmxwS1kwRlFVelZ6WmtWaVdXbGZZMjlGWnpKbldrMWxWbmhuYzFsck4xOVJSMWxuTVc5YU4yRndiRzVKV2xVNVpFUjBiR1IyT1V4dmVYTmhZWEZIZDNCeVpVSnljMFZXZUd3M1VqbHVObWhsWkdGWVNuSnNRblZUWWpOQ1VVaHZUUzA0YzNod1FrazVibFpMUjNZek1UQkhWMGd6VURRNWNtMXdOakZWTkdObllVcEtWbUpEU2xGMVVtOU1VREpmWWs1M1VIZHdXbmc0VHpsWVNXUjZiazF5TkZCYWNXaG9hMVJaUlZSMFEyOVVlbDlWY3pCSU1HTXdjMVEyTkV3elJtZzBlVGN6VG14aFNHNWhlV1JqYlZCaWJrRTFOMWM0UTFWNVFWcGlkM2RyWldKd2RrNDBUSGN5UjJweGREZFhkblpGV1hnMFZFSlFaek52TlRNM09HdFZlbTFXVjBwSlQzUnBhakpUTFhkSE5GVllNSHBHYVZjMU9FUXlNMFZWY21GblkyMUhWRkJEZFdaR2VXbHVkMU50UjJvdE5YWkpUV2hzWTJJMVN6UlRWMXBHY21oZmFrb3haRTVxV1hWNWJVcE5TVWR0UkVab0xUQk1jRzA0WlZSQk9IYzRWakJCVlVwNWEwRldhRE5MU1hOM2N5MDRkbE5GUldWTVVuRTFZV2hDYTJKelN6TklZblo0ZDFCRmFHNXdjM1prTkhkRFRHbDNTelk1TmxaRU5qTk9NREJwV1ZSMFpqRnhlR1JpYkRsdkxYbGhlVXBmVWxCNlVHWjNUWFJRYmxjMlYyY3hTbWRJVTFneVdqSlpZaTFyZEdGYVMyZzJNVGxDV1hjMlJrcDRVRXA1WVVJd01qWk5iVEo1TlRNM2VIWkhjVkZyYUhOa2VrZFZSRWhxYTJKTVRtNTNaa2g2T1hOdk5GSkRUMHQ2TUZCR2FsTTRSWE0zUTB0NWRuUjRNMWs0YnpjMk1rbFlMWFZuVmtKdlFXZzVibkZ3VTNGbGRHc3hiWEl0UzJGUlVHTmxVSFZOY2pKemJFUk5hbGRwTkRKRFVYUkRVSE5LVkVkcWVFdFRMVTVwWnpaamJUTjVORTUwTUZscWQwaDNNVlZ0ZEhGdlpXeFRjVFJpTjNZME0xOXhiM3BpTFdJdGVEZG1OVE15U1ZKWWFtcDBWQzFyUzJZdFpFUmhTVFkzYXpKQ05uSkhSbmN0WDB0Nk5XMUdjazFXVDBoemVVRXpkRW95ZGxaMmRWWTFiRzFJU0hkM1RqVklTbEZtYjNOWGVHaFpPRUkyY0ROMlZtVllNVzFIVXpsWWJYVnVTVXRRVFZCelRVTmZRV05uZVd4WGNsRXdiVlJaY1RRMmMyMWhhRTFVY25NNFZIRkZRakJWVUZGallVMWtSblpFUmtSU1lYbFZSRWxwUWtOc05IbHdRM2RmTkZkUlNYSnFkakpIZW5nME1sUlFUMjR3VjNwTmFuVkdjalZaUzNGTGRFMVpiR1pQWWkxR2VYbzVXVmR2YlZWMVRYVk5aRTkxTVhSQ1lreHhSVVZ1VTFoV09HTkZOM0pvZVdwNFEzTkxSVXRQUTNGNVFqQmtkRTB5WkZSME1uZzRPVFk0VjBKV1JUZGxNWEowVTJSRk0ySnlUMVJJUVZoVmNsVlhNbTlhWjFsNmRWOURXVUpFUVVaek5VRnhYM0ZYTVRobU1HVTJZVE52VERrek1qUkRNMWxxY2t4Qk1tZHJZazl5VG5CSllrTjFRV296YXpVeVZFWkdkSFpZUmxOMVFVeHpSMkpSYjBOMlYybFNiM1YzTkRWc2RrbEpaelF4YzNWU04xUnhVRWxqUjB4NGFUbFJWbFIyZG1WR1RWVmpSRVZ6TWt0aFpGZGljbUYzYTBsUE1VcDJlamR1VVhNeE1saFpRVmxITUhFNFkydFZSems0UlRGUFkyVmFhRGhYVkdOUVEzWm5ZMmh4VDBVelkxaHRSMUpKVGw5VVVteHpUVU5rY0dOUlltdGxibmgyWlZJNVh6UlBMalF6YjJWamVVTXRiRWRHZURsSlltbzRjSE15ZDBFLmdsNU9lM2ZHMlRkMWFYa3p3dzB1dDY3SEQ3TzVKckRWakFaejJaWVFQY00iLCJleHAiOjE3MTAyMzI3MjQsImlhdCI6MTcxMDIzMDkyNH0.oYgjmYRyPe1C4TlTQXWEOoyUK2lZDFPHr0u6CEcheSM\",\n \"callbacks\": [\n  {\n   \"type\": \"TextOutputCallback\",\n   \"output\": [\n    {\n     \"name\": \"message\",\n     \"value\": \"passwordPolicyNotFullfilled\"\n    },\n    {\n     \"name\": \"messageType\",\n     \"value\": \"2\"\n    }\n   ],\n   \"_id\": 16\n  },\n  {\n   \"type\": \"ValidatedCreatePasswordCallback\",\n   \"output\": [\n    {\n     \"name\": \"echoOn\",\n     \"value\": false\n    },\n    {\n     \"name\": \"policies\",\n     \"value\": {\n      \"policyRequirements\": [\n       \"REQUIRED\",\n       \"MIN_LENGTH\",\n       \"VALID_TYPE\"\n      ],\n      \"fallbackPolicies\": null,\n      \"name\": \"password\",\n      \"policies\": [\n       {\n        \"policyRequirements\": [\n         \"REQUIRED\"\n        ],\n        \"policyId\": \"not-empty\"\n       },\n       {\n        \"policyRequirements\": [\n         \"MIN_LENGTH\"\n        ],\n        \"policyId\": \"minimum-length\",\n        \"params\": {\n         \"minLength\": 12\n        }\n       },\n       {\n        \"policyRequirements\": [\n         \"VALID_TYPE\"\n        ],\n        \"policyId\": \"valid-type\",\n        \"params\": {\n         \"types\": [\n          \"string\"\n         ]\n        }\n       }\n      ],\n      \"conditionalPolicies\": [\n       {\n        \"condition\": {\n         \"source\": \"(fullObject.userName !== undefined && fullObject.userName !== '')\",\n         \"type\": \"text/javascript\"\n        },\n        \"dependencies\": [\n         \"userName\"\n        ],\n        \"policies\": [\n         {\n          \"policyId\": \"ciam-password-policy\"\n         }\n        ]\n       }\n      ]\n     }\n    },\n    {\n     \"name\": \"failedPolicies\",\n     \"value\": []\n    },\n    {\n     \"name\": \"validateOnly\",\n     \"value\": false\n    },\n    {\n     \"name\": \"prompt\",\n     \"value\": \"Password\"\n    }\n   ],\n   \"input\": [\n    {\n     \"name\": \"IDToken2\",\n     \"value\": \"Test@1\"\n    },\n    {\n     \"name\": \"IDToken2validateOnly\",\n     \"value\": true\n    }\n   ],\n   \"_id\": 17\n  }\n ],\n \"header\": \"Enter new password\",\n \"status\": 200,\n \"ok\": true\n}"
								},
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "accept-api-version",
										"value": "protocol=1.0,resource=2.1"
									},
									{
										"key": "accept-encoding",
										"value": "gzip, deflate, br"
									}
								],
								"method": "POST",
								"url": "{{url}}/am/json/realms/root/realms/customer/authenticate"
							},
							"status": "OK"
						}
					]
				}
			],
			"name": "changePassword"
		}
	],
	"variable": [
		{
			"key": "url",
			"type": "default",
			"value": ""
		},
		{
			"key": "userName",
			"type": "default",
			"value": ""
		},
		{
			"key": "password",
			"type": "string",
			"value": ""
		},
		{
			"key": "otp",
			"type": "default",
			"value": ""
		},
		{
			"key": "tokenId",
			"value": ""
		},
		{
			"key": "newPassword",
			"type": "string",
			"value": ""
		},
		{
			"key": "authId",
			"value": ""
		}
	]
}